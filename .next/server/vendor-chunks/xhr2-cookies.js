"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/xhr2-cookies";
exports.ids = ["vendor-chunks/xhr2-cookies"];
exports.modules = {

/***/ "(ssr)/./node_modules/xhr2-cookies/dist/errors.js":
/*!**************************************************!*\
  !*** ./node_modules/xhr2-cookies/dist/errors.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar SecurityError = /** @class */ (function (_super) {\n    __extends(SecurityError, _super);\n    function SecurityError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SecurityError;\n}(Error));\nexports.SecurityError = SecurityError;\nvar InvalidStateError = /** @class */ (function (_super) {\n    __extends(InvalidStateError, _super);\n    function InvalidStateError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return InvalidStateError;\n}(Error));\nexports.InvalidStateError = InvalidStateError;\nvar NetworkError = /** @class */ (function (_super) {\n    __extends(NetworkError, _super);\n    function NetworkError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NetworkError;\n}(Error));\nexports.NetworkError = NetworkError;\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SyntaxError;\n}(Error));\nexports.SyntaxError = SyntaxError;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveGhyMi1jb29raWVzL2Rpc3QvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDbkYsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRCw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlLWJyaWRnZS8uL25vZGVfbW9kdWxlcy94aHIyLWNvb2tpZXMvZGlzdC9lcnJvcnMuanM/NjE3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFNlY3VyaXR5RXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFNlY3VyaXR5RXJyb3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gU2VjdXJpdHlFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gU2VjdXJpdHlFcnJvcjtcbn0oRXJyb3IpKTtcbmV4cG9ydHMuU2VjdXJpdHlFcnJvciA9IFNlY3VyaXR5RXJyb3I7XG52YXIgSW52YWxpZFN0YXRlRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEludmFsaWRTdGF0ZUVycm9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEludmFsaWRTdGF0ZUVycm9yKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBJbnZhbGlkU3RhdGVFcnJvcjtcbn0oRXJyb3IpKTtcbmV4cG9ydHMuSW52YWxpZFN0YXRlRXJyb3IgPSBJbnZhbGlkU3RhdGVFcnJvcjtcbnZhciBOZXR3b3JrRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE5ldHdvcmtFcnJvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBOZXR3b3JrRXJyb3IoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIE5ldHdvcmtFcnJvcjtcbn0oRXJyb3IpKTtcbmV4cG9ydHMuTmV0d29ya0Vycm9yID0gTmV0d29ya0Vycm9yO1xudmFyIFN5bnRheEVycm9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTeW50YXhFcnJvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTeW50YXhFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gU3ludGF4RXJyb3I7XG59KEVycm9yKSk7XG5leHBvcnRzLlN5bnRheEVycm9yID0gU3ludGF4RXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xhr2-cookies/dist/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xhr2-cookies/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/xhr2-cookies/dist/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__export(__webpack_require__(/*! ./xml-http-request */ \"(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request.js\"));\nvar xml_http_request_event_target_1 = __webpack_require__(/*! ./xml-http-request-event-target */ \"(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request-event-target.js\");\nexports.XMLHttpRequestEventTarget = xml_http_request_event_target_1.XMLHttpRequestEventTarget;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveGhyMi1jb29raWVzL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsU0FBUyxtQkFBTyxDQUFDLHNGQUFvQjtBQUNyQyxzQ0FBc0MsbUJBQU8sQ0FBQyxnSEFBaUM7QUFDL0UsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGUtYnJpZGdlLy4vbm9kZV9tb2R1bGVzL3hocjItY29va2llcy9kaXN0L2luZGV4LmpzPzA3NWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnQocmVxdWlyZShcIi4veG1sLWh0dHAtcmVxdWVzdFwiKSk7XG52YXIgeG1sX2h0dHBfcmVxdWVzdF9ldmVudF90YXJnZXRfMSA9IHJlcXVpcmUoXCIuL3htbC1odHRwLXJlcXVlc3QtZXZlbnQtdGFyZ2V0XCIpO1xuZXhwb3J0cy5YTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0ID0geG1sX2h0dHBfcmVxdWVzdF9ldmVudF90YXJnZXRfMS5YTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xhr2-cookies/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xhr2-cookies/dist/progress-event.js":
/*!**********************************************************!*\
  !*** ./node_modules/xhr2-cookies/dist/progress-event.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ProgressEvent = /** @class */ (function () {\n    function ProgressEvent(type) {\n        this.type = type;\n        this.bubbles = false;\n        this.cancelable = false;\n        this.loaded = 0;\n        this.lengthComputable = false;\n        this.total = 0;\n    }\n    return ProgressEvent;\n}());\nexports.ProgressEvent = ProgressEvent;\n//# sourceMappingURL=progress-event.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveGhyMi1jb29raWVzL2Rpc3QvcHJvZ3Jlc3MtZXZlbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGUtYnJpZGdlLy4vbm9kZV9tb2R1bGVzL3hocjItY29va2llcy9kaXN0L3Byb2dyZXNzLWV2ZW50LmpzP2UwZTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgUHJvZ3Jlc3NFdmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcm9ncmVzc0V2ZW50KHR5cGUpIHtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5idWJibGVzID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY2FuY2VsYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmxvYWRlZCA9IDA7XG4gICAgICAgIHRoaXMubGVuZ3RoQ29tcHV0YWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRvdGFsID0gMDtcbiAgICB9XG4gICAgcmV0dXJuIFByb2dyZXNzRXZlbnQ7XG59KCkpO1xuZXhwb3J0cy5Qcm9ncmVzc0V2ZW50ID0gUHJvZ3Jlc3NFdmVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2dyZXNzLWV2ZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xhr2-cookies/dist/progress-event.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request-event-target.js":
/*!*************************************************************************!*\
  !*** ./node_modules/xhr2-cookies/dist/xml-http-request-event-target.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar XMLHttpRequestEventTarget = /** @class */ (function () {\n    function XMLHttpRequestEventTarget() {\n        this.listeners = {};\n    }\n    XMLHttpRequestEventTarget.prototype.addEventListener = function (eventType, listener) {\n        eventType = eventType.toLowerCase();\n        this.listeners[eventType] = this.listeners[eventType] || [];\n        this.listeners[eventType].push(listener.handleEvent || listener);\n    };\n    XMLHttpRequestEventTarget.prototype.removeEventListener = function (eventType, listener) {\n        eventType = eventType.toLowerCase();\n        if (!this.listeners[eventType]) {\n            return;\n        }\n        var index = this.listeners[eventType].indexOf(listener.handleEvent || listener);\n        if (index < 0) {\n            return;\n        }\n        this.listeners[eventType].splice(index, 1);\n    };\n    XMLHttpRequestEventTarget.prototype.dispatchEvent = function (event) {\n        var eventType = event.type.toLowerCase();\n        event.target = this; // TODO: set event.currentTarget?\n        if (this.listeners[eventType]) {\n            for (var _i = 0, _a = this.listeners[eventType]; _i < _a.length; _i++) {\n                var listener_1 = _a[_i];\n                listener_1.call(this, event);\n            }\n        }\n        var listener = this[\"on\" + eventType];\n        if (listener) {\n            listener.call(this, event);\n        }\n        return true;\n    };\n    return XMLHttpRequestEventTarget;\n}());\nexports.XMLHttpRequestEventTarget = XMLHttpRequestEventTarget;\n//# sourceMappingURL=xml-http-request-event-target.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveGhyMi1jb29raWVzL2Rpc3QveG1sLWh0dHAtcmVxdWVzdC1ldmVudC10YXJnZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2REFBNkQsZ0JBQWdCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGUtYnJpZGdlLy4vbm9kZV9tb2R1bGVzL3hocjItY29va2llcy9kaXN0L3htbC1odHRwLXJlcXVlc3QtZXZlbnQtdGFyZ2V0LmpzP2IwOTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBYTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0KCkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IHt9O1xuICAgIH1cbiAgICBYTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gKGV2ZW50VHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgZXZlbnRUeXBlID0gZXZlbnRUeXBlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzW2V2ZW50VHlwZV0gPSB0aGlzLmxpc3RlbmVyc1tldmVudFR5cGVdIHx8IFtdO1xuICAgICAgICB0aGlzLmxpc3RlbmVyc1tldmVudFR5cGVdLnB1c2gobGlzdGVuZXIuaGFuZGxlRXZlbnQgfHwgbGlzdGVuZXIpO1xuICAgIH07XG4gICAgWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudFR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIGV2ZW50VHlwZSA9IGV2ZW50VHlwZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoIXRoaXMubGlzdGVuZXJzW2V2ZW50VHlwZV0pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaW5kZXggPSB0aGlzLmxpc3RlbmVyc1tldmVudFR5cGVdLmluZGV4T2YobGlzdGVuZXIuaGFuZGxlRXZlbnQgfHwgbGlzdGVuZXIpO1xuICAgICAgICBpZiAoaW5kZXggPCAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnRUeXBlXS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH07XG4gICAgWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldC5wcm90b3R5cGUuZGlzcGF0Y2hFdmVudCA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgZXZlbnRUeXBlID0gZXZlbnQudHlwZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBldmVudC50YXJnZXQgPSB0aGlzOyAvLyBUT0RPOiBzZXQgZXZlbnQuY3VycmVudFRhcmdldD9cbiAgICAgICAgaWYgKHRoaXMubGlzdGVuZXJzW2V2ZW50VHlwZV0pIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSB0aGlzLmxpc3RlbmVyc1tldmVudFR5cGVdOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgIHZhciBsaXN0ZW5lcl8xID0gX2FbX2ldO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyXzEuY2FsbCh0aGlzLCBldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxpc3RlbmVyID0gdGhpc1tcIm9uXCIgKyBldmVudFR5cGVdO1xuICAgICAgICBpZiAobGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGxpc3RlbmVyLmNhbGwodGhpcywgZXZlbnQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gICAgcmV0dXJuIFhNTEh0dHBSZXF1ZXN0RXZlbnRUYXJnZXQ7XG59KCkpO1xuZXhwb3J0cy5YTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0ID0gWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXhtbC1odHRwLXJlcXVlc3QtZXZlbnQtdGFyZ2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request-event-target.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request-upload.js":
/*!*******************************************************************!*\
  !*** ./node_modules/xhr2-cookies/dist/xml-http-request-upload.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar xml_http_request_event_target_1 = __webpack_require__(/*! ./xml-http-request-event-target */ \"(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request-event-target.js\");\nvar XMLHttpRequestUpload = /** @class */ (function (_super) {\n    __extends(XMLHttpRequestUpload, _super);\n    function XMLHttpRequestUpload() {\n        var _this = _super.call(this) || this;\n        _this._contentType = null;\n        _this._body = null;\n        _this._reset();\n        return _this;\n    }\n    XMLHttpRequestUpload.prototype._reset = function () {\n        this._contentType = null;\n        this._body = null;\n    };\n    XMLHttpRequestUpload.prototype._setData = function (data) {\n        if (data == null) {\n            return;\n        }\n        if (typeof data === 'string') {\n            if (data.length !== 0) {\n                this._contentType = 'text/plain;charset=UTF-8';\n            }\n            this._body = new Buffer(data, 'utf-8');\n        }\n        else if (Buffer.isBuffer(data)) {\n            this._body = data;\n        }\n        else if (data instanceof ArrayBuffer) {\n            var body = new Buffer(data.byteLength);\n            var view = new Uint8Array(data);\n            for (var i = 0; i < data.byteLength; i++) {\n                body[i] = view[i];\n            }\n            this._body = body;\n        }\n        else if (data.buffer && data.buffer instanceof ArrayBuffer) {\n            var body = new Buffer(data.byteLength);\n            var offset = data.byteOffset;\n            var view = new Uint8Array(data.buffer);\n            for (var i = 0; i < data.byteLength; i++) {\n                body[i] = view[i + offset];\n            }\n            this._body = body;\n        }\n        else {\n            throw new Error(\"Unsupported send() data \" + data);\n        }\n    };\n    XMLHttpRequestUpload.prototype._finalizeHeaders = function (headers, loweredHeaders) {\n        if (this._contentType && !loweredHeaders['content-type']) {\n            headers['Content-Type'] = this._contentType;\n        }\n        if (this._body) {\n            headers['Content-Length'] = this._body.length.toString();\n        }\n    };\n    XMLHttpRequestUpload.prototype._startUpload = function (request) {\n        if (this._body) {\n            request.write(this._body);\n        }\n        request.end();\n    };\n    return XMLHttpRequestUpload;\n}(xml_http_request_event_target_1.XMLHttpRequestEventTarget));\nexports.XMLHttpRequestUpload = XMLHttpRequestUpload;\n//# sourceMappingURL=xml-http-request-upload.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveGhyMi1jb29raWVzL2Rpc3QveG1sLWh0dHAtcmVxdWVzdC11cGxvYWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUNuRiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNELDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQ0FBc0MsbUJBQU8sQ0FBQyxnSEFBaUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHFCQUFxQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHFCQUFxQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlLWJyaWRnZS8uL25vZGVfbW9kdWxlcy94aHIyLWNvb2tpZXMvZGlzdC94bWwtaHR0cC1yZXF1ZXN0LXVwbG9hZC5qcz9mYjM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgeG1sX2h0dHBfcmVxdWVzdF9ldmVudF90YXJnZXRfMSA9IHJlcXVpcmUoXCIuL3htbC1odHRwLXJlcXVlc3QtZXZlbnQtdGFyZ2V0XCIpO1xudmFyIFhNTEh0dHBSZXF1ZXN0VXBsb2FkID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhYTUxIdHRwUmVxdWVzdFVwbG9hZCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBYTUxIdHRwUmVxdWVzdFVwbG9hZCgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuX2NvbnRlbnRUeXBlID0gbnVsbDtcbiAgICAgICAgX3RoaXMuX2JvZHkgPSBudWxsO1xuICAgICAgICBfdGhpcy5fcmVzZXQoKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBYTUxIdHRwUmVxdWVzdFVwbG9hZC5wcm90b3R5cGUuX3Jlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9jb250ZW50VHlwZSA9IG51bGw7XG4gICAgICAgIHRoaXMuX2JvZHkgPSBudWxsO1xuICAgIH07XG4gICAgWE1MSHR0cFJlcXVlc3RVcGxvYWQucHJvdG90eXBlLl9zZXREYXRhID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgaWYgKGRhdGEgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRlbnRUeXBlID0gJ3RleHQvcGxhaW47Y2hhcnNldD1VVEYtOCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9ib2R5ID0gbmV3IEJ1ZmZlcihkYXRhLCAndXRmLTgnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChCdWZmZXIuaXNCdWZmZXIoZGF0YSkpIHtcbiAgICAgICAgICAgIHRoaXMuX2JvZHkgPSBkYXRhO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBuZXcgQnVmZmVyKGRhdGEuYnl0ZUxlbmd0aCk7XG4gICAgICAgICAgICB2YXIgdmlldyA9IG5ldyBVaW50OEFycmF5KGRhdGEpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGJvZHlbaV0gPSB2aWV3W2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fYm9keSA9IGJvZHk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZGF0YS5idWZmZXIgJiYgZGF0YS5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBuZXcgQnVmZmVyKGRhdGEuYnl0ZUxlbmd0aCk7XG4gICAgICAgICAgICB2YXIgb2Zmc2V0ID0gZGF0YS5ieXRlT2Zmc2V0O1xuICAgICAgICAgICAgdmFyIHZpZXcgPSBuZXcgVWludDhBcnJheShkYXRhLmJ1ZmZlcik7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEuYnl0ZUxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgYm9keVtpXSA9IHZpZXdbaSArIG9mZnNldF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9ib2R5ID0gYm9keTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHNlbmQoKSBkYXRhIFwiICsgZGF0YSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFhNTEh0dHBSZXF1ZXN0VXBsb2FkLnByb3RvdHlwZS5fZmluYWxpemVIZWFkZXJzID0gZnVuY3Rpb24gKGhlYWRlcnMsIGxvd2VyZWRIZWFkZXJzKSB7XG4gICAgICAgIGlmICh0aGlzLl9jb250ZW50VHlwZSAmJiAhbG93ZXJlZEhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddKSB7XG4gICAgICAgICAgICBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHRoaXMuX2NvbnRlbnRUeXBlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9ib2R5KSB7XG4gICAgICAgICAgICBoZWFkZXJzWydDb250ZW50LUxlbmd0aCddID0gdGhpcy5fYm9keS5sZW5ndGgudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgWE1MSHR0cFJlcXVlc3RVcGxvYWQucHJvdG90eXBlLl9zdGFydFVwbG9hZCA9IGZ1bmN0aW9uIChyZXF1ZXN0KSB7XG4gICAgICAgIGlmICh0aGlzLl9ib2R5KSB7XG4gICAgICAgICAgICByZXF1ZXN0LndyaXRlKHRoaXMuX2JvZHkpO1xuICAgICAgICB9XG4gICAgICAgIHJlcXVlc3QuZW5kKCk7XG4gICAgfTtcbiAgICByZXR1cm4gWE1MSHR0cFJlcXVlc3RVcGxvYWQ7XG59KHhtbF9odHRwX3JlcXVlc3RfZXZlbnRfdGFyZ2V0XzEuWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldCkpO1xuZXhwb3J0cy5YTUxIdHRwUmVxdWVzdFVwbG9hZCA9IFhNTEh0dHBSZXF1ZXN0VXBsb2FkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eG1sLWh0dHAtcmVxdWVzdC11cGxvYWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request-upload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request.js":
/*!************************************************************!*\
  !*** ./node_modules/xhr2-cookies/dist/xml-http-request.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar os = __webpack_require__(/*! os */ \"os\");\nvar url = __webpack_require__(/*! url */ \"url\");\nvar progress_event_1 = __webpack_require__(/*! ./progress-event */ \"(ssr)/./node_modules/xhr2-cookies/dist/progress-event.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/xhr2-cookies/dist/errors.js\");\nvar xml_http_request_event_target_1 = __webpack_require__(/*! ./xml-http-request-event-target */ \"(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request-event-target.js\");\nvar xml_http_request_upload_1 = __webpack_require__(/*! ./xml-http-request-upload */ \"(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request-upload.js\");\nvar Cookie = __webpack_require__(/*! cookiejar */ \"(ssr)/./node_modules/cookiejar/cookiejar.js\");\nvar XMLHttpRequest = /** @class */ (function (_super) {\n    __extends(XMLHttpRequest, _super);\n    function XMLHttpRequest(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this.UNSENT = XMLHttpRequest.UNSENT;\n        _this.OPENED = XMLHttpRequest.OPENED;\n        _this.HEADERS_RECEIVED = XMLHttpRequest.HEADERS_RECEIVED;\n        _this.LOADING = XMLHttpRequest.LOADING;\n        _this.DONE = XMLHttpRequest.DONE;\n        _this.onreadystatechange = null;\n        _this.readyState = XMLHttpRequest.UNSENT;\n        _this.response = null;\n        _this.responseText = '';\n        _this.responseType = '';\n        _this.status = 0; // TODO: UNSENT?\n        _this.statusText = '';\n        _this.timeout = 0;\n        _this.upload = new xml_http_request_upload_1.XMLHttpRequestUpload();\n        _this.responseUrl = '';\n        _this.withCredentials = false;\n        _this._method = null;\n        _this._url = null;\n        _this._sync = false;\n        _this._headers = {};\n        _this._loweredHeaders = {};\n        _this._mimeOverride = null; // TODO: is type right?\n        _this._request = null;\n        _this._response = null;\n        _this._responseParts = null;\n        _this._responseHeaders = null;\n        _this._aborting = null; // TODO: type?\n        _this._error = null; // TODO: type?\n        _this._loadedBytes = 0;\n        _this._totalBytes = 0;\n        _this._lengthComputable = false;\n        _this._restrictedMethods = { CONNECT: true, TRACE: true, TRACK: true };\n        _this._restrictedHeaders = {\n            'accept-charset': true,\n            'accept-encoding': true,\n            'access-control-request-headers': true,\n            'access-control-request-method': true,\n            connection: true,\n            'content-length': true,\n            cookie: true,\n            cookie2: true,\n            date: true,\n            dnt: true,\n            expect: true,\n            host: true,\n            'keep-alive': true,\n            origin: true,\n            referer: true,\n            te: true,\n            trailer: true,\n            'transfer-encoding': true,\n            upgrade: true,\n            'user-agent': true,\n            via: true\n        };\n        _this._privateHeaders = { 'set-cookie': true, 'set-cookie2': true };\n        _this._userAgent = \"Mozilla/5.0 (\" + os.type() + \" \" + os.arch() + \") node.js/\" + process.versions.node + \" v8/\" + process.versions.v8;\n        _this._anonymous = options.anon || false;\n        return _this;\n    }\n    XMLHttpRequest.prototype.open = function (method, url, async, user, password) {\n        if (async === void 0) { async = true; }\n        method = method.toUpperCase();\n        if (this._restrictedMethods[method]) {\n            throw new XMLHttpRequest.SecurityError(\"HTTP method \" + method + \" is not allowed in XHR\");\n        }\n        ;\n        var xhrUrl = this._parseUrl(url, user, password);\n        if (this.readyState === XMLHttpRequest.HEADERS_RECEIVED || this.readyState === XMLHttpRequest.LOADING) {\n            // TODO(pwnall): terminate abort(), terminate send()\n        }\n        this._method = method;\n        this._url = xhrUrl;\n        this._sync = !async;\n        this._headers = {};\n        this._loweredHeaders = {};\n        this._mimeOverride = null;\n        this._setReadyState(XMLHttpRequest.OPENED);\n        this._request = null;\n        this._response = null;\n        this.status = 0;\n        this.statusText = '';\n        this._responseParts = [];\n        this._responseHeaders = null;\n        this._loadedBytes = 0;\n        this._totalBytes = 0;\n        this._lengthComputable = false;\n    };\n    XMLHttpRequest.prototype.setRequestHeader = function (name, value) {\n        if (this.readyState !== XMLHttpRequest.OPENED) {\n            throw new XMLHttpRequest.InvalidStateError('XHR readyState must be OPENED');\n        }\n        var loweredName = name.toLowerCase();\n        if (this._restrictedHeaders[loweredName] || /^sec-/.test(loweredName) || /^proxy-/.test(loweredName)) {\n            console.warn(\"Refused to set unsafe header \\\"\" + name + \"\\\"\");\n            return;\n        }\n        value = value.toString();\n        if (this._loweredHeaders[loweredName] != null) {\n            name = this._loweredHeaders[loweredName];\n            this._headers[name] = this._headers[name] + \", \" + value;\n        }\n        else {\n            this._loweredHeaders[loweredName] = name;\n            this._headers[name] = value;\n        }\n    };\n    XMLHttpRequest.prototype.send = function (data) {\n        if (this.readyState !== XMLHttpRequest.OPENED) {\n            throw new XMLHttpRequest.InvalidStateError('XHR readyState must be OPENED');\n        }\n        if (this._request) {\n            throw new XMLHttpRequest.InvalidStateError('send() already called');\n        }\n        switch (this._url.protocol) {\n            case 'file:':\n                return this._sendFile(data);\n            case 'http:':\n            case 'https:':\n                return this._sendHttp(data);\n            default:\n                throw new XMLHttpRequest.NetworkError(\"Unsupported protocol \" + this._url.protocol);\n        }\n    };\n    XMLHttpRequest.prototype.abort = function () {\n        if (this._request == null) {\n            return;\n        }\n        this._request.abort();\n        this._setError();\n        this._dispatchProgress('abort');\n        this._dispatchProgress('loadend');\n    };\n    XMLHttpRequest.prototype.getResponseHeader = function (name) {\n        if (this._responseHeaders == null || name == null) {\n            return null;\n        }\n        var loweredName = name.toLowerCase();\n        return this._responseHeaders.hasOwnProperty(loweredName)\n            ? this._responseHeaders[name.toLowerCase()]\n            : null;\n    };\n    XMLHttpRequest.prototype.getAllResponseHeaders = function () {\n        var _this = this;\n        if (this._responseHeaders == null) {\n            return '';\n        }\n        return Object.keys(this._responseHeaders).map(function (key) { return key + \": \" + _this._responseHeaders[key]; }).join('\\r\\n');\n    };\n    XMLHttpRequest.prototype.overrideMimeType = function (mimeType) {\n        if (this.readyState === XMLHttpRequest.LOADING || this.readyState === XMLHttpRequest.DONE) {\n            throw new XMLHttpRequest.InvalidStateError('overrideMimeType() not allowed in LOADING or DONE');\n        }\n        this._mimeOverride = mimeType.toLowerCase();\n    };\n    XMLHttpRequest.prototype.nodejsSet = function (options) {\n        this.nodejsHttpAgent = options.httpAgent || this.nodejsHttpAgent;\n        this.nodejsHttpsAgent = options.httpsAgent || this.nodejsHttpsAgent;\n        if (options.hasOwnProperty('baseUrl')) {\n            if (options.baseUrl != null) {\n                var parsedUrl = url.parse(options.baseUrl, false, true);\n                if (!parsedUrl.protocol) {\n                    throw new XMLHttpRequest.SyntaxError(\"baseUrl must be an absolute URL\");\n                }\n            }\n            this.nodejsBaseUrl = options.baseUrl;\n        }\n    };\n    XMLHttpRequest.nodejsSet = function (options) {\n        XMLHttpRequest.prototype.nodejsSet(options);\n    };\n    XMLHttpRequest.prototype._setReadyState = function (readyState) {\n        this.readyState = readyState;\n        this.dispatchEvent(new progress_event_1.ProgressEvent('readystatechange'));\n    };\n    XMLHttpRequest.prototype._sendFile = function (data) {\n        // TODO\n        throw new Error('Protocol file: not implemented');\n    };\n    XMLHttpRequest.prototype._sendHttp = function (data) {\n        if (this._sync) {\n            throw new Error('Synchronous XHR processing not implemented');\n        }\n        if (data && (this._method === 'GET' || this._method === 'HEAD')) {\n            console.warn(\"Discarding entity body for \" + this._method + \" requests\");\n            data = null;\n        }\n        else {\n            data = data || '';\n        }\n        this.upload._setData(data);\n        this._finalizeHeaders();\n        this._sendHxxpRequest();\n    };\n    XMLHttpRequest.prototype._sendHxxpRequest = function () {\n        var _this = this;\n        if (this.withCredentials) {\n            var cookie = XMLHttpRequest.cookieJar\n                .getCookies(Cookie.CookieAccessInfo(this._url.hostname, this._url.pathname, this._url.protocol === 'https:')).toValueString();\n            this._headers.cookie = this._headers.cookie2 = cookie;\n        }\n        var _a = this._url.protocol === 'http:' ? [http, this.nodejsHttpAgent] : [https, this.nodejsHttpsAgent], hxxp = _a[0], agent = _a[1];\n        var requestMethod = hxxp.request.bind(hxxp);\n        var request = requestMethod({\n            hostname: this._url.hostname,\n            port: +this._url.port,\n            path: this._url.path,\n            auth: this._url.auth,\n            method: this._method,\n            headers: this._headers,\n            agent: agent\n        });\n        this._request = request;\n        if (this.timeout) {\n            request.setTimeout(this.timeout, function () { return _this._onHttpTimeout(request); });\n        }\n        request.on('response', function (response) { return _this._onHttpResponse(request, response); });\n        request.on('error', function (error) { return _this._onHttpRequestError(request, error); });\n        this.upload._startUpload(request);\n        if (this._request === request) {\n            this._dispatchProgress('loadstart');\n        }\n    };\n    XMLHttpRequest.prototype._finalizeHeaders = function () {\n        this._headers = __assign({}, this._headers, { Connection: 'keep-alive', Host: this._url.host, 'User-Agent': this._userAgent }, this._anonymous ? { Referer: 'about:blank' } : {});\n        this.upload._finalizeHeaders(this._headers, this._loweredHeaders);\n    };\n    XMLHttpRequest.prototype._onHttpResponse = function (request, response) {\n        var _this = this;\n        if (this._request !== request) {\n            return;\n        }\n        if (this.withCredentials && (response.headers['set-cookie'] || response.headers['set-cookie2'])) {\n            XMLHttpRequest.cookieJar\n                .setCookies(response.headers['set-cookie'] || response.headers['set-cookie2']);\n        }\n        if ([301, 302, 303, 307, 308].indexOf(response.statusCode) >= 0) {\n            this._url = this._parseUrl(response.headers.location);\n            this._method = 'GET';\n            if (this._loweredHeaders['content-type']) {\n                delete this._headers[this._loweredHeaders['content-type']];\n                delete this._loweredHeaders['content-type'];\n            }\n            if (this._headers['Content-Type'] != null) {\n                delete this._headers['Content-Type'];\n            }\n            delete this._headers['Content-Length'];\n            this.upload._reset();\n            this._finalizeHeaders();\n            this._sendHxxpRequest();\n            return;\n        }\n        this._response = response;\n        this._response.on('data', function (data) { return _this._onHttpResponseData(response, data); });\n        this._response.on('end', function () { return _this._onHttpResponseEnd(response); });\n        this._response.on('close', function () { return _this._onHttpResponseClose(response); });\n        this.responseUrl = this._url.href.split('#')[0];\n        this.status = response.statusCode;\n        this.statusText = http.STATUS_CODES[this.status];\n        this._parseResponseHeaders(response);\n        var lengthString = this._responseHeaders['content-length'] || '';\n        this._totalBytes = +lengthString;\n        this._lengthComputable = !!lengthString;\n        this._setReadyState(XMLHttpRequest.HEADERS_RECEIVED);\n    };\n    XMLHttpRequest.prototype._onHttpResponseData = function (response, data) {\n        if (this._response !== response) {\n            return;\n        }\n        this._responseParts.push(new Buffer(data));\n        this._loadedBytes += data.length;\n        if (this.readyState !== XMLHttpRequest.LOADING) {\n            this._setReadyState(XMLHttpRequest.LOADING);\n        }\n        this._dispatchProgress('progress');\n    };\n    XMLHttpRequest.prototype._onHttpResponseEnd = function (response) {\n        if (this._response !== response) {\n            return;\n        }\n        this._parseResponse();\n        this._request = null;\n        this._response = null;\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('load');\n        this._dispatchProgress('loadend');\n    };\n    XMLHttpRequest.prototype._onHttpResponseClose = function (response) {\n        if (this._response !== response) {\n            return;\n        }\n        var request = this._request;\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('error');\n        this._dispatchProgress('loadend');\n    };\n    XMLHttpRequest.prototype._onHttpTimeout = function (request) {\n        if (this._request !== request) {\n            return;\n        }\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('timeout');\n        this._dispatchProgress('loadend');\n    };\n    XMLHttpRequest.prototype._onHttpRequestError = function (request, error) {\n        if (this._request !== request) {\n            return;\n        }\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('error');\n        this._dispatchProgress('loadend');\n    };\n    XMLHttpRequest.prototype._dispatchProgress = function (eventType) {\n        var event = new XMLHttpRequest.ProgressEvent(eventType);\n        event.lengthComputable = this._lengthComputable;\n        event.loaded = this._loadedBytes;\n        event.total = this._totalBytes;\n        this.dispatchEvent(event);\n    };\n    XMLHttpRequest.prototype._setError = function () {\n        this._request = null;\n        this._response = null;\n        this._responseHeaders = null;\n        this._responseParts = null;\n    };\n    XMLHttpRequest.prototype._parseUrl = function (urlString, user, password) {\n        var absoluteUrl = this.nodejsBaseUrl == null ? urlString : url.resolve(this.nodejsBaseUrl, urlString);\n        var xhrUrl = url.parse(absoluteUrl, false, true);\n        xhrUrl.hash = null;\n        var _a = (xhrUrl.auth || '').split(':'), xhrUser = _a[0], xhrPassword = _a[1];\n        if (xhrUser || xhrPassword || user || password) {\n            xhrUrl.auth = (user || xhrUser || '') + \":\" + (password || xhrPassword || '');\n        }\n        return xhrUrl;\n    };\n    XMLHttpRequest.prototype._parseResponseHeaders = function (response) {\n        this._responseHeaders = {};\n        for (var name_1 in response.headers) {\n            var loweredName = name_1.toLowerCase();\n            if (this._privateHeaders[loweredName]) {\n                continue;\n            }\n            this._responseHeaders[loweredName] = response.headers[name_1];\n        }\n        if (this._mimeOverride != null) {\n            this._responseHeaders['content-type'] = this._mimeOverride;\n        }\n    };\n    XMLHttpRequest.prototype._parseResponse = function () {\n        var buffer = Buffer.concat(this._responseParts);\n        this._responseParts = null;\n        switch (this.responseType) {\n            case 'json':\n                this.responseText = null;\n                try {\n                    this.response = JSON.parse(buffer.toString('utf-8'));\n                }\n                catch (_a) {\n                    this.response = null;\n                }\n                return;\n            case 'buffer':\n                this.responseText = null;\n                this.response = buffer;\n                return;\n            case 'arraybuffer':\n                this.responseText = null;\n                var arrayBuffer = new ArrayBuffer(buffer.length);\n                var view = new Uint8Array(arrayBuffer);\n                for (var i = 0; i < buffer.length; i++) {\n                    view[i] = buffer[i];\n                }\n                this.response = arrayBuffer;\n                return;\n            case 'text':\n            default:\n                try {\n                    this.responseText = buffer.toString(this._parseResponseEncoding());\n                }\n                catch (_b) {\n                    this.responseText = buffer.toString('binary');\n                }\n                this.response = this.responseText;\n        }\n    };\n    XMLHttpRequest.prototype._parseResponseEncoding = function () {\n        return /;\\s*charset=(.*)$/.exec(this._responseHeaders['content-type'] || '')[1] || 'utf-8';\n    };\n    XMLHttpRequest.ProgressEvent = progress_event_1.ProgressEvent;\n    XMLHttpRequest.InvalidStateError = errors_1.InvalidStateError;\n    XMLHttpRequest.NetworkError = errors_1.NetworkError;\n    XMLHttpRequest.SecurityError = errors_1.SecurityError;\n    XMLHttpRequest.SyntaxError = errors_1.SyntaxError;\n    XMLHttpRequest.XMLHttpRequestUpload = xml_http_request_upload_1.XMLHttpRequestUpload;\n    XMLHttpRequest.UNSENT = 0;\n    XMLHttpRequest.OPENED = 1;\n    XMLHttpRequest.HEADERS_RECEIVED = 2;\n    XMLHttpRequest.LOADING = 3;\n    XMLHttpRequest.DONE = 4;\n    XMLHttpRequest.cookieJar = Cookie.CookieJar();\n    return XMLHttpRequest;\n}(xml_http_request_event_target_1.XMLHttpRequestEventTarget));\nexports.XMLHttpRequest = XMLHttpRequest;\nXMLHttpRequest.prototype.nodejsHttpAgent = http.globalAgent;\nXMLHttpRequest.prototype.nodejsHttpsAgent = https.globalAgent;\nXMLHttpRequest.prototype.nodejsBaseUrl = null;\n//# sourceMappingURL=xml-http-request.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xhr2-cookies/dist/xml-http-request.js\n");

/***/ })

};
;
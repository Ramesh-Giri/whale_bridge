/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-provider-engine";
exports.ids = ["vendor-chunks/web3-provider-engine"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-provider-engine/index.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-provider-engine/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter)\nconst inherits = (__webpack_require__(/*! util */ \"util\").inherits)\nconst ethUtil = __webpack_require__(/*! ethereumjs-util */ \"(ssr)/./node_modules/ethereumjs-util/dist/index.js\")\nconst EthBlockTracker = __webpack_require__(/*! eth-block-tracker */ \"(ssr)/./node_modules/eth-block-tracker/src/polling.js\")\nconst map = __webpack_require__(/*! async/map */ \"(ssr)/./node_modules/async/map.js\")\nconst eachSeries = __webpack_require__(/*! async/eachSeries */ \"(ssr)/./node_modules/async/eachSeries.js\")\nconst Stoplight = __webpack_require__(/*! ./util/stoplight.js */ \"(ssr)/./node_modules/web3-provider-engine/util/stoplight.js\")\nconst cacheUtils = __webpack_require__(/*! ./util/rpc-cache-utils.js */ \"(ssr)/./node_modules/web3-provider-engine/util/rpc-cache-utils.js\")\nconst createPayload = __webpack_require__(/*! ./util/create-payload.js */ \"(ssr)/./node_modules/web3-provider-engine/util/create-payload.js\")\nconst noop = function(){}\n\nmodule.exports = Web3ProviderEngine\n\n\ninherits(Web3ProviderEngine, EventEmitter)\n\nfunction Web3ProviderEngine(opts) {\n  const self = this\n  EventEmitter.call(self)\n  self.setMaxListeners(30)\n  // parse options\n  opts = opts || {}\n\n  // block polling\n  const directProvider = { sendAsync: self._handleAsync.bind(self) }\n  const blockTrackerProvider = opts.blockTrackerProvider || directProvider\n  self._blockTracker = opts.blockTracker || new EthBlockTracker({\n    provider: blockTrackerProvider,\n    pollingInterval: opts.pollingInterval || 4000,\n    setSkipCacheFlag: true,\n  })\n\n  // set initialization blocker\n  self._ready = new Stoplight()\n\n  // local state\n  self.currentBlock = null\n  self._providers = []\n}\n\n// public\n\nWeb3ProviderEngine.prototype.start = function(cb = noop){\n  const self = this\n\n  // trigger start\n  self._ready.go()\n\n  // on new block, request block body and emit as events\n  self._blockTracker.on('latest', (blockNumber) => {\n    // get block body\n    self._getBlockByNumberWithRetry(blockNumber, (err, block) => {\n      if (err) {\n        this.emit('error', err)\n        return\n      }\n      if (!block) {\n        console.log(block)\n        this.emit('error', new Error(\"Could not find block\"))\n        return\n      }\n      const bufferBlock = toBufferBlock(block)\n      // set current + emit \"block\" event\n      self._setCurrentBlock(bufferBlock)\n      // emit other events\n      self.emit('rawBlock', block)\n      self.emit('latest', block)\n    })\n  })\n\n  // forward other events\n  self._blockTracker.on('sync', self.emit.bind(self, 'sync'))\n  self._blockTracker.on('error', self.emit.bind(self, 'error'))\n\n  // update state\n  self._running = true\n  // signal that we started\n  self.emit('start')\n}\n\nWeb3ProviderEngine.prototype.stop = function(){\n  const self = this\n  // stop block polling by removing event listeners\n  self._blockTracker.removeAllListeners()\n  // update state\n  self._running = false\n  // signal that we stopped\n  self.emit('stop')\n}\n\nWeb3ProviderEngine.prototype.isRunning = function(){\n  const self = this\n  return self._running\n}\n\nWeb3ProviderEngine.prototype.addProvider = function(source, index){\n  const self = this\n  if (typeof index === 'number') {\n    self._providers.splice(index, 0, source)\n  } else {\n    self._providers.push(source)\n  }\n  source.setEngine(this)\n}\n\nWeb3ProviderEngine.prototype.removeProvider = function(source){\n  const self = this\n  const index = self._providers.indexOf(source)\n  if (index < 0) throw new Error('Provider not found.')\n  self._providers.splice(index, 1)\n}\n\nWeb3ProviderEngine.prototype.send = function(payload){\n  throw new Error('Web3ProviderEngine does not support synchronous requests.')\n}\n\nWeb3ProviderEngine.prototype.sendAsync = function(payload, cb){\n  const self = this\n  self._ready.await(function(){\n\n    if (Array.isArray(payload)) {\n      // handle batch\n      map(payload, self._handleAsync.bind(self), cb)\n    } else {\n      // handle single\n      self._handleAsync(payload, cb)\n    }\n\n  })\n}\n\n// private\n\nWeb3ProviderEngine.prototype._getBlockByNumberWithRetry = function(blockNumber, cb) {\n  const self = this\n\n  let retriesRemaining = 5\n\n  attemptRequest()\n  return\n\n  function attemptRequest () {\n    self._getBlockByNumber(blockNumber, afterRequest)\n  }\n\n  function afterRequest (err, block) {\n    // anomalous error occurred\n    if (err) return cb(err)\n    // block not ready yet\n    if (!block) {\n      if (retriesRemaining > 0) {\n        // wait 1s then try again\n        retriesRemaining--\n        setTimeout(function () {\n          attemptRequest()\n        }, 1000)\n        return\n      } else {\n        // give up, return a null block\n        cb(null, null)\n        return\n      }\n    }\n    // otherwise return result\n    cb(null, block)\n    return\n  }\n}\n\n\nWeb3ProviderEngine.prototype._getBlockByNumber = function(blockNumber, cb) {\n  const req = createPayload({ method: 'eth_getBlockByNumber', params: [blockNumber, false], skipCache: true })\n  this._handleAsync(req, (err, res) => {\n    if (err) return cb(err)\n    return cb(null, res.result)\n  })\n}\n\nWeb3ProviderEngine.prototype._handleAsync = function(payload, finished) {\n  var self = this\n  var currentProvider = -1\n  var result = null\n  var error = null\n\n  var stack = []\n\n  next()\n\n  function next(after) {\n    currentProvider += 1\n    stack.unshift(after)\n\n    // Bubbled down as far as we could go, and the request wasn't\n    // handled. Return an error.\n    if (currentProvider >= self._providers.length) {\n      end(new Error('Request for method \"' + payload.method + '\" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.'))\n    } else {\n      try {\n        var provider = self._providers[currentProvider]\n        provider.handleRequest(payload, next, end)\n      } catch (e) {\n        end(e)\n      }\n    }\n  }\n\n  function end(_error, _result) {\n    error = _error\n    result = _result\n\n    eachSeries(stack, function(fn, callback) {\n\n      if (fn) {\n        fn(error, result, callback)\n      } else {\n        callback()\n      }\n    }, function() {\n\n      var resultObj = {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      }\n\n      if (error != null) {\n        resultObj.error = {\n          message: error.stack || error.message || error,\n          code: -32000\n        }\n        // respond with both error formats\n        finished(error, resultObj)\n      } else {\n        finished(null, resultObj)\n      }\n    })\n  }\n}\n\n//\n// from remote-data\n//\n\nWeb3ProviderEngine.prototype._setCurrentBlock = function(block){\n  const self = this\n  self.currentBlock = block\n  self.emit('block', block)\n}\n\n// util\n\nfunction toBufferBlock (jsonBlock) {\n  return {\n    number:           ethUtil.toBuffer(jsonBlock.number),\n    hash:             ethUtil.toBuffer(jsonBlock.hash),\n    parentHash:       ethUtil.toBuffer(jsonBlock.parentHash),\n    nonce:            ethUtil.toBuffer(jsonBlock.nonce),\n    mixHash:          ethUtil.toBuffer(jsonBlock.mixHash),\n    sha3Uncles:       ethUtil.toBuffer(jsonBlock.sha3Uncles),\n    logsBloom:        ethUtil.toBuffer(jsonBlock.logsBloom),\n    transactionsRoot: ethUtil.toBuffer(jsonBlock.transactionsRoot),\n    stateRoot:        ethUtil.toBuffer(jsonBlock.stateRoot),\n    receiptsRoot:     ethUtil.toBuffer(jsonBlock.receiptRoot || jsonBlock.receiptsRoot),\n    miner:            ethUtil.toBuffer(jsonBlock.miner),\n    difficulty:       ethUtil.toBuffer(jsonBlock.difficulty),\n    totalDifficulty:  ethUtil.toBuffer(jsonBlock.totalDifficulty),\n    size:             ethUtil.toBuffer(jsonBlock.size),\n    extraData:        ethUtil.toBuffer(jsonBlock.extraData),\n    gasLimit:         ethUtil.toBuffer(jsonBlock.gasLimit),\n    gasUsed:          ethUtil.toBuffer(jsonBlock.gasUsed),\n    timestamp:        ethUtil.toBuffer(jsonBlock.timestamp),\n    transactions:     jsonBlock.transactions,\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/subproviders/cache.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-provider-engine/subproviders/cache.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ProviderSubprovider = __webpack_require__(/*! ./json-rpc-engine-middleware */ \"(ssr)/./node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js\")\nconst createBlockCacheMiddleware = __webpack_require__(/*! eth-json-rpc-middleware/block-cache */ \"(ssr)/./node_modules/eth-json-rpc-middleware/block-cache.js\")\n\nclass BlockCacheSubprovider extends ProviderSubprovider {\n  constructor(opts) {\n    super(({ blockTracker }) => createBlockCacheMiddleware(Object.assign({ blockTracker }, opts)))\n  }\n}\n\nmodule.exports = BlockCacheSubprovider\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL2NhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QixtQkFBTyxDQUFDLDBIQUE4QjtBQUNsRSxtQ0FBbUMsbUJBQU8sQ0FBQyx3R0FBcUM7O0FBRWhGO0FBQ0E7QUFDQSxhQUFhLGNBQWMsZ0RBQWdELGNBQWM7QUFDekY7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlLWJyaWRnZS8uL25vZGVfbW9kdWxlcy93ZWIzLXByb3ZpZGVyLWVuZ2luZS9zdWJwcm92aWRlcnMvY2FjaGUuanM/NWY1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQcm92aWRlclN1YnByb3ZpZGVyID0gcmVxdWlyZSgnLi9qc29uLXJwYy1lbmdpbmUtbWlkZGxld2FyZScpXG5jb25zdCBjcmVhdGVCbG9ja0NhY2hlTWlkZGxld2FyZSA9IHJlcXVpcmUoJ2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL2Jsb2NrLWNhY2hlJylcblxuY2xhc3MgQmxvY2tDYWNoZVN1YnByb3ZpZGVyIGV4dGVuZHMgUHJvdmlkZXJTdWJwcm92aWRlciB7XG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICBzdXBlcigoeyBibG9ja1RyYWNrZXIgfSkgPT4gY3JlYXRlQmxvY2tDYWNoZU1pZGRsZXdhcmUoT2JqZWN0LmFzc2lnbih7IGJsb2NrVHJhY2tlciB9LCBvcHRzKSkpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCbG9ja0NhY2hlU3VicHJvdmlkZXJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/subproviders/cache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/subproviders/filters.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-provider-engine/subproviders/filters.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ProviderSubprovider = __webpack_require__(/*! ./json-rpc-engine-middleware */ \"(ssr)/./node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js\")\nconst createFilterMiddleware = __webpack_require__(/*! eth-json-rpc-filters */ \"(ssr)/./node_modules/eth-json-rpc-filters/index.js\")\n\nclass SubscriptionsSubprovider extends ProviderSubprovider {\n  constructor() {\n    super(({ blockTracker, provider, engine }) => {\n      return createFilterMiddleware({ blockTracker, provider })\n    })\n  }\n}\n\nmodule.exports = SubscriptionsSubprovider\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL2ZpbHRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsNEJBQTRCLG1CQUFPLENBQUMsMEhBQThCO0FBQ2xFLCtCQUErQixtQkFBTyxDQUFDLGdGQUFzQjs7QUFFN0Q7QUFDQTtBQUNBLGFBQWEsZ0NBQWdDO0FBQzdDLHNDQUFzQyx3QkFBd0I7QUFDOUQsS0FBSztBQUNMO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZS1icmlkZ2UvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL2ZpbHRlcnMuanM/NGFjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQcm92aWRlclN1YnByb3ZpZGVyID0gcmVxdWlyZSgnLi9qc29uLXJwYy1lbmdpbmUtbWlkZGxld2FyZScpXG5jb25zdCBjcmVhdGVGaWx0ZXJNaWRkbGV3YXJlID0gcmVxdWlyZSgnZXRoLWpzb24tcnBjLWZpbHRlcnMnKVxuXG5jbGFzcyBTdWJzY3JpcHRpb25zU3VicHJvdmlkZXIgZXh0ZW5kcyBQcm92aWRlclN1YnByb3ZpZGVyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKHsgYmxvY2tUcmFja2VyLCBwcm92aWRlciwgZW5naW5lIH0pID0+IHtcbiAgICAgIHJldHVybiBjcmVhdGVGaWx0ZXJNaWRkbGV3YXJlKHsgYmxvY2tUcmFja2VyLCBwcm92aWRlciB9KVxuICAgIH0pXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTdWJzY3JpcHRpb25zU3VicHJvdmlkZXJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/subproviders/filters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/subproviders/fixture.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-provider-engine/subproviders/fixture.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const inherits = (__webpack_require__(/*! util */ \"util\").inherits)\nconst Subprovider = __webpack_require__(/*! ./subprovider.js */ \"(ssr)/./node_modules/web3-provider-engine/subproviders/subprovider.js\")\n\nmodule.exports = FixtureProvider\n\ninherits(FixtureProvider, Subprovider)\n\nfunction FixtureProvider(staticResponses){\n  const self = this\n  staticResponses = staticResponses || {}\n  self.staticResponses = staticResponses\n}\n\nFixtureProvider.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  var staticResponse = self.staticResponses[payload.method]\n  // async function\n  if ('function' === typeof staticResponse) {\n    staticResponse(payload, next, end)\n  // static response - null is valid response\n  } else if (staticResponse !== undefined) {\n    // return result asynchronously\n    setTimeout(() => end(null, staticResponse))\n  // no prepared response - skip\n  } else {\n    next()\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL2ZpeHR1cmUuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGtEQUF3QjtBQUN6QyxvQkFBb0IsbUJBQU8sQ0FBQywrRkFBa0I7O0FBRTlDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlLWJyaWRnZS8uL25vZGVfbW9kdWxlcy93ZWIzLXByb3ZpZGVyLWVuZ2luZS9zdWJwcm92aWRlcnMvZml4dHVyZS5qcz9lZjJjIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGluaGVyaXRzID0gcmVxdWlyZSgndXRpbCcpLmluaGVyaXRzXG5jb25zdCBTdWJwcm92aWRlciA9IHJlcXVpcmUoJy4vc3VicHJvdmlkZXIuanMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZpeHR1cmVQcm92aWRlclxuXG5pbmhlcml0cyhGaXh0dXJlUHJvdmlkZXIsIFN1YnByb3ZpZGVyKVxuXG5mdW5jdGlvbiBGaXh0dXJlUHJvdmlkZXIoc3RhdGljUmVzcG9uc2VzKXtcbiAgY29uc3Qgc2VsZiA9IHRoaXNcbiAgc3RhdGljUmVzcG9uc2VzID0gc3RhdGljUmVzcG9uc2VzIHx8IHt9XG4gIHNlbGYuc3RhdGljUmVzcG9uc2VzID0gc3RhdGljUmVzcG9uc2VzXG59XG5cbkZpeHR1cmVQcm92aWRlci5wcm90b3R5cGUuaGFuZGxlUmVxdWVzdCA9IGZ1bmN0aW9uKHBheWxvYWQsIG5leHQsIGVuZCl7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG4gIHZhciBzdGF0aWNSZXNwb25zZSA9IHNlbGYuc3RhdGljUmVzcG9uc2VzW3BheWxvYWQubWV0aG9kXVxuICAvLyBhc3luYyBmdW5jdGlvblxuICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIHN0YXRpY1Jlc3BvbnNlKSB7XG4gICAgc3RhdGljUmVzcG9uc2UocGF5bG9hZCwgbmV4dCwgZW5kKVxuICAvLyBzdGF0aWMgcmVzcG9uc2UgLSBudWxsIGlzIHZhbGlkIHJlc3BvbnNlXG4gIH0gZWxzZSBpZiAoc3RhdGljUmVzcG9uc2UgIT09IHVuZGVmaW5lZCkge1xuICAgIC8vIHJldHVybiByZXN1bHQgYXN5bmNocm9ub3VzbHlcbiAgICBzZXRUaW1lb3V0KCgpID0+IGVuZChudWxsLCBzdGF0aWNSZXNwb25zZSkpXG4gIC8vIG5vIHByZXBhcmVkIHJlc3BvbnNlIC0gc2tpcFxuICB9IGVsc2Uge1xuICAgIG5leHQoKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/subproviders/fixture.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/subproviders/hooked-wallet.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-provider-engine/subproviders/hooked-wallet.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * Emulate 'eth_accounts' / 'eth_sendTransaction' using 'eth_sendRawTransaction'\n *\n * The two callbacks a user needs to implement are:\n * - getAccounts() -- array of addresses supported\n * - signTransaction(tx) -- sign a raw transaction object\n */\n\nconst waterfall = __webpack_require__(/*! async/waterfall */ \"(ssr)/./node_modules/async/waterfall.js\")\nconst parallel = __webpack_require__(/*! async/parallel */ \"(ssr)/./node_modules/async/parallel.js\")\nconst inherits = (__webpack_require__(/*! util */ \"util\").inherits)\nconst ethUtil = __webpack_require__(/*! ethereumjs-util */ \"(ssr)/./node_modules/ethereumjs-util/dist/index.js\")\nconst sigUtil = __webpack_require__(/*! eth-sig-util */ \"(ssr)/./node_modules/eth-sig-util/index.js\")\nconst extend = __webpack_require__(/*! xtend */ \"(ssr)/./node_modules/xtend/immutable.js\")\nconst Semaphore = __webpack_require__(/*! semaphore */ \"(ssr)/./node_modules/semaphore/lib/semaphore.js\")\nconst Subprovider = __webpack_require__(/*! ./subprovider.js */ \"(ssr)/./node_modules/web3-provider-engine/subproviders/subprovider.js\")\nconst estimateGas = __webpack_require__(/*! ../util/estimate-gas.js */ \"(ssr)/./node_modules/web3-provider-engine/util/estimate-gas.js\")\nconst hexRegex = /^[0-9A-Fa-f]+$/g\n\nmodule.exports = HookedWalletSubprovider\n\n// handles the following RPC methods:\n//   eth_coinbase\n//   eth_accounts\n//   eth_sendTransaction\n//   eth_sign\n//   eth_signTypedData\n//   eth_signTypedData_v3\n//   eth_signTypedData_v4\n//   personal_sign\n//   eth_decryptMessage\n//   encryption_public_key\n//   personal_ecRecover\n//   parity_postTransaction\n//   parity_checkRequest\n//   parity_defaultAccount\n\n//\n// Tx Signature Flow\n//\n// handleRequest: eth_sendTransaction\n//   validateTransaction (basic validity check)\n//     validateSender (checks that sender is in accounts)\n//   processTransaction (sign tx and submit to network)\n//     approveTransaction (UI approval hook)\n//     checkApproval\n//     finalizeAndSubmitTx (tx signing)\n//       nonceLock.take (bottle neck to ensure atomic nonce)\n//         fillInTxExtras (set fallback gasPrice, nonce, etc)\n//         signTransaction (perform the signature)\n//         publishTransaction (publish signed tx to network)\n//\n\n\ninherits(HookedWalletSubprovider, Subprovider)\n\nfunction HookedWalletSubprovider(opts){\n  const self = this\n  // control flow\n  self.nonceLock = Semaphore(1)\n\n  // data lookup\n  if (opts.getAccounts) self.getAccounts = opts.getAccounts\n  // high level override\n  if (opts.processTransaction) self.processTransaction = opts.processTransaction\n  if (opts.processMessage) self.processMessage = opts.processMessage\n  if (opts.processPersonalMessage) self.processPersonalMessage = opts.processPersonalMessage\n  if (opts.processTypedMessage) self.processTypedMessage = opts.processTypedMessage\n  // approval hooks\n  self.approveTransaction = opts.approveTransaction || self.autoApprove\n  self.approveMessage = opts.approveMessage || self.autoApprove\n  self.approvePersonalMessage = opts.approvePersonalMessage || self.autoApprove\n  self.approveDecryptMessage = opts.approveDecryptMessage || self.autoApprove\n  self.approveEncryptionPublicKey = opts.approveEncryptionPublicKey || self.autoApprove\n  self.approveTypedMessage = opts.approveTypedMessage || self.autoApprove\n  // actually perform the signature\n  if (opts.signTransaction) self.signTransaction = opts.signTransaction  || mustProvideInConstructor('signTransaction')\n  if (opts.signMessage) self.signMessage = opts.signMessage  || mustProvideInConstructor('signMessage')\n  if (opts.signPersonalMessage) self.signPersonalMessage = opts.signPersonalMessage  || mustProvideInConstructor('signPersonalMessage')\n  if (opts.decryptMessage) self.decryptMessage = opts.decryptMessage  || mustProvideInConstructor('decryptMessage')\n  if (opts.encryptionPublicKey) self.encryptionPublicKey = opts.encryptionPublicKey  || mustProvideInConstructor('encryptionPublicKey')\n  if (opts.signTypedMessage) self.signTypedMessage = opts.signTypedMessage  || mustProvideInConstructor('signTypedMessage')\n  if (opts.recoverPersonalSignature) self.recoverPersonalSignature = opts.recoverPersonalSignature\n  // publish to network\n  if (opts.publishTransaction) self.publishTransaction = opts.publishTransaction\n  // gas options\n  self.estimateGas = opts.estimateGas || self.estimateGas\n  self.getGasPrice = opts.getGasPrice || self.getGasPrice\n}\n\nHookedWalletSubprovider.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  self._parityRequests = {}\n  self._parityRequestCount = 0\n\n  // switch statement is not block scoped\n  // sp we cant repeat var declarations\n  let txParams, msgParams, extraParams\n  let message, address\n\n  switch(payload.method) {\n\n    case 'eth_coinbase':\n      // process normally\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        let result = accounts[0] || null\n        end(null, result)\n      })\n      return\n\n    case 'eth_accounts':\n      // process normally\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        end(null, accounts)\n      })\n      return\n\n    case 'eth_sendTransaction':\n      txParams = payload.params[0]\n      waterfall([\n        (cb) => self.validateTransaction(txParams, cb),\n        (cb) => self.processTransaction(txParams, cb),\n      ], end)\n      return\n\n    case 'eth_signTransaction':\n      txParams = payload.params[0]\n      waterfall([\n        (cb) => self.validateTransaction(txParams, cb),\n        (cb) => self.processSignTransaction(txParams, cb),\n      ], end)\n      return\n\n    case 'eth_sign':\n      // process normally\n      address = payload.params[0]\n      message = payload.params[1]\n      // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n      // good place for metadata\n      extraParams = payload.params[2] || {}\n      msgParams = extend(extraParams, {\n        from: address,\n        data: message,\n      })\n      waterfall([\n        (cb) => self.validateMessage(msgParams, cb),\n        (cb) => self.processMessage(msgParams, cb),\n      ], end)\n      return\n\n    case 'personal_sign':\n      return (function(){\n        // process normally\n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        // We initially incorrectly ordered these parameters.\n        // To gracefully respect users who adopted this API early,\n        // we are currently gracefully recovering from the wrong param order\n        // when it is clearly identifiable.\n        //\n        // That means when the first param is definitely an address,\n        // and the second param is definitely not, but is hex.\n        if (resemblesData(second) && resemblesAddress(first)) {\n          let warning = `The eth_personalSign method requires params ordered `\n          warning += `[message, address]. This was previously handled incorrectly, `\n          warning += `and has been corrected automatically. `\n          warning += `Please switch this param order for smooth behavior in the future.`\n          console.warn(warning)\n\n          address = payload.params[0]\n          message = payload.params[1]\n        } else {\n          message = payload.params[0]\n          address = payload.params[1]\n        }\n\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validatePersonalMessage(msgParams, cb),\n          (cb) => self.processPersonalMessage(msgParams, cb),\n        ], end)\n      })()\n\n    case 'eth_decryptMessage':\n      return (function(){\n        // process normally\n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        // We initially incorrectly ordered these parameters.\n        // To gracefully respect users who adopted this API early,\n        // we are currently gracefully recovering from the wrong param order\n        // when it is clearly identifiable.\n        //\n        // That means when the first param is definitely an address,\n        // and the second param is definitely not, but is hex.\n        if (resemblesData(second) && resemblesAddress(first)) {\n          let warning = `The eth_decryptMessage method requires params ordered `\n          warning += `[message, address]. This was previously handled incorrectly, `\n          warning += `and has been corrected automatically. `\n          warning += `Please switch this param order for smooth behavior in the future.`\n          console.warn(warning)\n\n          address = payload.params[0]\n          message = payload.params[1]\n        } else {\n          message = payload.params[0]\n          address = payload.params[1]\n        }\n\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validateDecryptMessage(msgParams, cb),\n          (cb) => self.processDecryptMessage(msgParams, cb),\n        ], end)\n      })()\n      \n    case 'encryption_public_key':\n      return (function(){\n        const address = payload.params[0]\n        \n        waterfall([\n          (cb) => self.validateEncryptionPublicKey(address, cb),\n          (cb) => self.processEncryptionPublicKey(address, cb),\n        ], end)\n      })()\n      \n    case 'personal_ecRecover':\n      return (function(){    \n        message = payload.params[0]\n        let signature = payload.params[1]\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          sig: signature,\n          data: message,\n        })\n        self.recoverPersonalSignature(msgParams, end)\n      })()\n\n    case 'eth_signTypedData':\n    case 'eth_signTypedData_v3':\n    case 'eth_signTypedData_v4':\n      return (function(){ \n        // process normally\n      \n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        if (resemblesAddress(first)) {\n          address = first\n          message = second\n        } else {\n          message = first\n          address = second\n        }\n\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validateTypedMessage(msgParams, cb),\n          (cb) => self.processTypedMessage(msgParams, cb),\n        ], end)\n      })()\n\n    case 'parity_postTransaction':\n      txParams = payload.params[0]\n      self.parityPostTransaction(txParams, end)\n      return\n\n    case 'parity_postSign':\n      address = payload.params[0]\n      message = payload.params[1]\n      self.parityPostSign(address, message, end)\n      return\n\n    case 'parity_checkRequest':\n      return (function(){\n        const requestId = payload.params[0]\n        self.parityCheckRequest(requestId, end)\n      })()\n\n    case 'parity_defaultAccount':\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        const account = accounts[0] || null\n        end(null, account)\n      })\n      return\n\n    default:\n      next()\n      return\n\n  }\n}\n\n//\n// data lookup\n//\n\nHookedWalletSubprovider.prototype.getAccounts = function(cb) {\n  cb(null, [])\n}\n\n\n//\n// \"process\" high level flow\n//\n\nHookedWalletSubprovider.prototype.processTransaction = function(txParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTransaction(txParams, cb),\n    (didApprove, cb) => self.checkApproval('transaction', didApprove, cb),\n    (cb) => self.finalizeAndSubmitTx(txParams, cb),\n  ], cb)\n}\n\n\nHookedWalletSubprovider.prototype.processSignTransaction = function(txParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTransaction(txParams, cb),\n    (didApprove, cb) => self.checkApproval('transaction', didApprove, cb),\n    (cb) => self.finalizeTx(txParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processPersonalMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approvePersonalMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signPersonalMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processDecryptMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveDecryptMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('decryptMessage', didApprove, cb),\n    (cb) => self.decryptMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processEncryptionPublicKey = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveEncryptionPublicKey(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('encryptionPublicKey', didApprove, cb),\n    (cb) => self.encryptionPublicKey(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processTypedMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTypedMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signTypedMessage(msgParams, cb),\n  ], cb)\n}\n\n//\n// approval\n//\n\nHookedWalletSubprovider.prototype.autoApprove = function(txParams, cb) {\n  cb(null, true)\n}\n\nHookedWalletSubprovider.prototype.checkApproval = function(type, didApprove, cb) {\n  cb( didApprove ? null : new Error('User denied '+type+' signature.') )\n}\n\n//\n// parity\n//\n\nHookedWalletSubprovider.prototype.parityPostTransaction = function(txParams, cb) {\n  const self = this\n\n  // get next id\n  const count = self._parityRequestCount\n  const reqId = `0x${count.toString(16)}`\n  self._parityRequestCount++\n\n  self.emitPayload({\n    method: 'eth_sendTransaction',\n    params: [txParams],\n  }, function(error, res){\n    if (error) {\n      self._parityRequests[reqId] = { error }\n      return\n    }\n    const txHash = res.result\n    self._parityRequests[reqId] = txHash\n  })\n\n  cb(null, reqId)\n}\n\n\nHookedWalletSubprovider.prototype.parityPostSign = function(address, message, cb) {\n  const self = this\n\n  // get next id\n  const count = self._parityRequestCount\n  const reqId = `0x${count.toString(16)}`\n  self._parityRequestCount++\n\n  self.emitPayload({\n    method: 'eth_sign',\n    params: [address, message],\n  }, function(error, res){\n    if (error) {\n      self._parityRequests[reqId] = { error }\n      return\n    }\n    const result = res.result\n    self._parityRequests[reqId] = result\n  })\n\n  cb(null, reqId)\n}\n\nHookedWalletSubprovider.prototype.parityCheckRequest = function(reqId, cb) {\n  const self = this\n  const result = self._parityRequests[reqId] || null\n  // tx not handled yet\n  if (!result) return cb(null, null)\n  // tx was rejected (or other error)\n  if (result.error) return cb(result.error)\n  // tx sent\n  cb(null, result)\n}\n\n//\n// signature and recovery\n//\n\nHookedWalletSubprovider.prototype.recoverPersonalSignature = function(msgParams, cb) {\n  let senderHex\n  try {\n    senderHex = sigUtil.recoverPersonalSignature(msgParams)\n  } catch (err) {\n    return cb(err)\n  }\n  cb(null, senderHex)\n}\n\n//\n// validation\n//\n\nHookedWalletSubprovider.prototype.validateTransaction = function(txParams, cb){\n  const self = this\n  // shortcut: undefined sender is invalid\n  if (txParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign transaction.`))\n  self.validateSender(txParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign transaction for this address: \"${txParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign message.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validatePersonalMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign personal message.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined message - message required to sign personal message.`))\n  if (!isValidHex(msgParams.data)) return cb(new Error(`HookedWalletSubprovider - validateMessage - message was not encoded as hex.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateDecryptMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to decrypt message.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined message - message required to decrypt message.`))\n  if (!isValidHex(msgParams.data)) return cb(new Error(`HookedWalletSubprovider - validateDecryptMessage - message was not encoded as hex.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to decrypt message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateEncryptionPublicKey = function(address, cb){\n  const self = this\n\n  self.validateSender(address, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to obtain encryption public key for this address: \"${address}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateTypedMessage = function(msgParams, cb){\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign typed data.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined data - message required to sign typed data.`))\n  this.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateSender = function(senderAddress, cb){\n  const self = this\n  // shortcut: undefined sender is invalid\n  if (!senderAddress) return cb(null, false)\n  self.getAccounts(function(err, accounts){\n    if (err) return cb(err)\n    const senderIsValid = (accounts.map(toLowerCase).indexOf(senderAddress.toLowerCase()) !== -1)\n    cb(null, senderIsValid)\n  })\n}\n\n//\n// tx helpers\n//\n\nHookedWalletSubprovider.prototype.finalizeAndSubmitTx = function(txParams, cb) {\n  const self = this\n  // can only allow one tx to pass through this flow at a time\n  // so we can atomically consume a nonce\n  self.nonceLock.take(function(){\n    waterfall([\n      self.fillInTxExtras.bind(self, txParams),\n      self.signTransaction.bind(self),\n      self.publishTransaction.bind(self),\n    ], function(err, txHash){\n      self.nonceLock.leave()\n      if (err) return cb(err)\n      cb(null, txHash)\n    })\n  })\n}\n\nHookedWalletSubprovider.prototype.finalizeTx = function(txParams, cb) {\n  const self = this\n  // can only allow one tx to pass through this flow at a time\n  // so we can atomically consume a nonce\n  self.nonceLock.take(function(){\n    waterfall([\n      self.fillInTxExtras.bind(self, txParams),\n      self.signTransaction.bind(self),\n    ], function(err, signedTx){\n      self.nonceLock.leave()\n      if (err) return cb(err)\n      cb(null, {raw: signedTx, tx: txParams})\n    })\n  })\n}\n\nHookedWalletSubprovider.prototype.publishTransaction = function(rawTx, cb) {\n  const self = this\n  self.emitPayload({\n    method: 'eth_sendRawTransaction',\n    params: [rawTx],\n  }, function(err, res){\n    if (err) return cb(err)\n    cb(null, res.result)\n  })\n}\n\nHookedWalletSubprovider.prototype.estimateGas = function(txParams, cb) {\n  const self = this\n  estimateGas(self.engine, txParams, cb)\n}\n\nHookedWalletSubprovider.prototype.getGasPrice = function(cb) {\n  const self = this\n  self.emitPayload({ method: 'eth_gasPrice', params: [] }, function (err, res) {\n    if (err) return cb(err)\n    cb(null, res.result)\n  })\n}\n\nHookedWalletSubprovider.prototype.fillInTxExtras = function(txParams, cb){\n  const self = this\n  const address = txParams.from\n  // console.log('fillInTxExtras - address:', address)\n\n  const tasks = {}\n\n  if (txParams.gasPrice === undefined) {\n    // console.log(\"need to get gasprice\")\n    tasks.gasPrice = self.getGasPrice.bind(self)\n  }\n\n  if (txParams.nonce === undefined) {\n    // console.log(\"need to get nonce\")\n    tasks.nonce = self.emitPayload.bind(self, { method: 'eth_getTransactionCount', params: [address, 'pending'] })\n  }\n\n  if (txParams.gas === undefined) {\n    // console.log(\"need to get gas\")\n    tasks.gas = self.estimateGas.bind(self, cloneTxParams(txParams))\n  }\n\n  parallel(tasks, function(err, taskResults) {\n    if (err) return cb(err)\n\n    const result = {}\n    if (taskResults.gasPrice) result.gasPrice = taskResults.gasPrice\n    if (taskResults.nonce) result.nonce = taskResults.nonce.result\n    if (taskResults.gas) result.gas = taskResults.gas\n\n    cb(null, extend(txParams, result))\n  })\n}\n\n// util\n\n// we use this to clean any custom params from the txParams\nfunction cloneTxParams(txParams){\n  return {\n    from: txParams.from,\n    to: txParams.to,\n    value: txParams.value,\n    data: txParams.data,\n    gas: txParams.gas,\n    gasPrice: txParams.gasPrice,\n    nonce: txParams.nonce,\n  }\n}\n\nfunction toLowerCase(string){\n  return string.toLowerCase()\n}\n\nfunction resemblesAddress (string) {\n  const fixed = ethUtil.addHexPrefix(string)\n  const isValid = ethUtil.isValidAddress(fixed)\n  return isValid\n}\n\n// Returns true if resembles hex data\n// but definitely not a valid address.\nfunction resemblesData (string) {\n  const fixed = ethUtil.addHexPrefix(string)\n  const isValidAddress = ethUtil.isValidAddress(fixed)\n  return !isValidAddress && isValidHex(string)\n}\n\nfunction isValidHex(data) {\n  const isString = typeof data === 'string'\n  if (!isString) return false\n  const isHexPrefixed = data.slice(0,2) === '0x'\n  if (!isHexPrefixed) return false\n  const nonPrefixed = data.slice(2)\n  const isValid = nonPrefixed.match(hexRegex)\n  return isValid\n}\n\nfunction mustProvideInConstructor(methodName) {\n  return function(params, cb) {\n    cb(new Error('ProviderEngine - HookedWalletSubprovider - Must provide \"' + methodName + '\" fn in constructor options'))\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/subproviders/hooked-wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Subprovider = __webpack_require__(/*! ./subprovider.js */ \"(ssr)/./node_modules/web3-provider-engine/subproviders/subprovider.js\")\n\n// wraps a json-rpc-engine middleware in a subprovider interface\n\nclass JsonRpcEngineMiddlewareSubprovider extends Subprovider {\n\n  // take a constructorFn to call once we have a reference to the engine\n  constructor (constructorFn) {\n    super()\n    if (!constructorFn) throw new Error('JsonRpcEngineMiddlewareSubprovider - no constructorFn specified')\n    this._constructorFn = constructorFn\n  }\n\n  // this is called once the subprovider has been added to the provider engine\n  setEngine (engine) {\n    if (this.middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - subprovider added to engine twice')\n    const blockTracker = engine._blockTracker\n    const middleware = this._constructorFn({ engine, provider: engine, blockTracker })\n    if (!middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - _constructorFn did not return middleware')\n    if (typeof middleware !== 'function') throw new Error('JsonRpcEngineMiddlewareSubprovider - specified middleware is not a function')\n    this.middleware = middleware\n  }\n\n  handleRequest (req, provEngNext, provEngEnd) {\n    const res = { id: req.id }\n    this.middleware(req, res, middlewareNext, middlewareEnd)\n\n    function middlewareNext (handler) {\n      provEngNext((err, result, cb) => {\n        // update response object with result or error\n        if (err) {\n          delete res.result\n          res.error = { message: err.message || err }\n        } else {\n          res.result = result\n        }\n        // call middleware's next handler (even if error)\n        if (handler) {\n          handler(cb)\n        } else {\n          cb()\n        }\n      })\n    }\n\n    function middlewareEnd (err) {\n      if (err) return provEngEnd(err)\n      provEngEnd(null, res.result)\n    }\n  }\n\n}\n\nmodule.exports = JsonRpcEngineMiddlewareSubprovider\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL2pzb24tcnBjLWVuZ2luZS1taWRkbGV3YXJlLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixtQkFBTyxDQUFDLCtGQUFrQjs7QUFFOUM7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHdDQUF3QztBQUNyRjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQjtBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlLWJyaWRnZS8uL25vZGVfbW9kdWxlcy93ZWIzLXByb3ZpZGVyLWVuZ2luZS9zdWJwcm92aWRlcnMvanNvbi1ycGMtZW5naW5lLW1pZGRsZXdhcmUuanM/ZWUzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTdWJwcm92aWRlciA9IHJlcXVpcmUoJy4vc3VicHJvdmlkZXIuanMnKVxuXG4vLyB3cmFwcyBhIGpzb24tcnBjLWVuZ2luZSBtaWRkbGV3YXJlIGluIGEgc3VicHJvdmlkZXIgaW50ZXJmYWNlXG5cbmNsYXNzIEpzb25ScGNFbmdpbmVNaWRkbGV3YXJlU3VicHJvdmlkZXIgZXh0ZW5kcyBTdWJwcm92aWRlciB7XG5cbiAgLy8gdGFrZSBhIGNvbnN0cnVjdG9yRm4gdG8gY2FsbCBvbmNlIHdlIGhhdmUgYSByZWZlcmVuY2UgdG8gdGhlIGVuZ2luZVxuICBjb25zdHJ1Y3RvciAoY29uc3RydWN0b3JGbikge1xuICAgIHN1cGVyKClcbiAgICBpZiAoIWNvbnN0cnVjdG9yRm4pIHRocm93IG5ldyBFcnJvcignSnNvblJwY0VuZ2luZU1pZGRsZXdhcmVTdWJwcm92aWRlciAtIG5vIGNvbnN0cnVjdG9yRm4gc3BlY2lmaWVkJylcbiAgICB0aGlzLl9jb25zdHJ1Y3RvckZuID0gY29uc3RydWN0b3JGblxuICB9XG5cbiAgLy8gdGhpcyBpcyBjYWxsZWQgb25jZSB0aGUgc3VicHJvdmlkZXIgaGFzIGJlZW4gYWRkZWQgdG8gdGhlIHByb3ZpZGVyIGVuZ2luZVxuICBzZXRFbmdpbmUgKGVuZ2luZSkge1xuICAgIGlmICh0aGlzLm1pZGRsZXdhcmUpIHRocm93IG5ldyBFcnJvcignSnNvblJwY0VuZ2luZU1pZGRsZXdhcmVTdWJwcm92aWRlciAtIHN1YnByb3ZpZGVyIGFkZGVkIHRvIGVuZ2luZSB0d2ljZScpXG4gICAgY29uc3QgYmxvY2tUcmFja2VyID0gZW5naW5lLl9ibG9ja1RyYWNrZXJcbiAgICBjb25zdCBtaWRkbGV3YXJlID0gdGhpcy5fY29uc3RydWN0b3JGbih7IGVuZ2luZSwgcHJvdmlkZXI6IGVuZ2luZSwgYmxvY2tUcmFja2VyIH0pXG4gICAgaWYgKCFtaWRkbGV3YXJlKSB0aHJvdyBuZXcgRXJyb3IoJ0pzb25ScGNFbmdpbmVNaWRkbGV3YXJlU3VicHJvdmlkZXIgLSBfY29uc3RydWN0b3JGbiBkaWQgbm90IHJldHVybiBtaWRkbGV3YXJlJylcbiAgICBpZiAodHlwZW9mIG1pZGRsZXdhcmUgIT09ICdmdW5jdGlvbicpIHRocm93IG5ldyBFcnJvcignSnNvblJwY0VuZ2luZU1pZGRsZXdhcmVTdWJwcm92aWRlciAtIHNwZWNpZmllZCBtaWRkbGV3YXJlIGlzIG5vdCBhIGZ1bmN0aW9uJylcbiAgICB0aGlzLm1pZGRsZXdhcmUgPSBtaWRkbGV3YXJlXG4gIH1cblxuICBoYW5kbGVSZXF1ZXN0IChyZXEsIHByb3ZFbmdOZXh0LCBwcm92RW5nRW5kKSB7XG4gICAgY29uc3QgcmVzID0geyBpZDogcmVxLmlkIH1cbiAgICB0aGlzLm1pZGRsZXdhcmUocmVxLCByZXMsIG1pZGRsZXdhcmVOZXh0LCBtaWRkbGV3YXJlRW5kKVxuXG4gICAgZnVuY3Rpb24gbWlkZGxld2FyZU5leHQgKGhhbmRsZXIpIHtcbiAgICAgIHByb3ZFbmdOZXh0KChlcnIsIHJlc3VsdCwgY2IpID0+IHtcbiAgICAgICAgLy8gdXBkYXRlIHJlc3BvbnNlIG9iamVjdCB3aXRoIHJlc3VsdCBvciBlcnJvclxuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgZGVsZXRlIHJlcy5yZXN1bHRcbiAgICAgICAgICByZXMuZXJyb3IgPSB7IG1lc3NhZ2U6IGVyci5tZXNzYWdlIHx8IGVyciB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzLnJlc3VsdCA9IHJlc3VsdFxuICAgICAgICB9XG4gICAgICAgIC8vIGNhbGwgbWlkZGxld2FyZSdzIG5leHQgaGFuZGxlciAoZXZlbiBpZiBlcnJvcilcbiAgICAgICAgaWYgKGhhbmRsZXIpIHtcbiAgICAgICAgICBoYW5kbGVyKGNiKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNiKClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtaWRkbGV3YXJlRW5kIChlcnIpIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiBwcm92RW5nRW5kKGVycilcbiAgICAgIHByb3ZFbmdFbmQobnVsbCwgcmVzLnJlc3VsdClcbiAgICB9XG4gIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEpzb25ScGNFbmdpbmVNaWRkbGV3YXJlU3VicHJvdmlkZXJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/subproviders/nonce-tracker.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-provider-engine/subproviders/nonce-tracker.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const inherits = (__webpack_require__(/*! util */ \"util\").inherits)\nconst Transaction = __webpack_require__(/*! ethereumjs-tx */ \"(ssr)/./node_modules/ethereumjs-tx/es5/index.js\")\nconst ethUtil = __webpack_require__(/*! ethereumjs-util */ \"(ssr)/./node_modules/ethereumjs-util/dist/index.js\")\nconst Subprovider = __webpack_require__(/*! ./subprovider.js */ \"(ssr)/./node_modules/web3-provider-engine/subproviders/subprovider.js\")\nconst blockTagForPayload = (__webpack_require__(/*! ../util/rpc-cache-utils */ \"(ssr)/./node_modules/web3-provider-engine/util/rpc-cache-utils.js\").blockTagForPayload)\n\nmodule.exports = NonceTrackerSubprovider\n\n// handles the following RPC methods:\n//   eth_getTransactionCount (pending only)\n//\n// observes the following RPC methods:\n//   eth_sendRawTransaction\n//   evm_revert (to clear the nonce cache)\n\ninherits(NonceTrackerSubprovider, Subprovider)\n\nfunction NonceTrackerSubprovider(opts){\n  const self = this\n\n  self.nonceCache = {}\n}\n\nNonceTrackerSubprovider.prototype.handleRequest = function(payload, next, end){\n  const self = this\n\n  switch(payload.method) {\n\n    case 'eth_getTransactionCount':\n      var blockTag = blockTagForPayload(payload)\n      var address = payload.params[0].toLowerCase()\n      var cachedResult = self.nonceCache[address]\n      // only handle requests against the 'pending' blockTag\n      if (blockTag === 'pending') {\n        // has a result\n        if (cachedResult) {\n          end(null, cachedResult)\n        // fallthrough then populate cache\n        } else {\n          next(function(err, result, cb){\n            if (err) return cb()\n            if (self.nonceCache[address] === undefined) {\n              self.nonceCache[address] = result\n            }\n            cb()\n          })\n        }\n      } else {\n        next()\n      }\n      return\n\n    case 'eth_sendRawTransaction':\n      // allow the request to continue normally\n      next(function(err, result, cb){\n        // only update local nonce if tx was submitted correctly\n        if (err) return cb()\n        // parse raw tx\n        var rawTx = payload.params[0]\n        var stripped = ethUtil.stripHexPrefix(rawTx)\n        var rawData = Buffer.from(ethUtil.stripHexPrefix(rawTx), 'hex')\n        var tx = new Transaction(Buffer.from(ethUtil.stripHexPrefix(rawTx), 'hex'))\n        // extract address\n        var address = '0x'+tx.getSenderAddress().toString('hex').toLowerCase()\n        // extract nonce and increment\n        var nonce = ethUtil.bufferToInt(tx.nonce)\n        nonce++\n        // hexify and normalize\n        var hexNonce = nonce.toString(16)\n        if (hexNonce.length%2) hexNonce = '0'+hexNonce\n        hexNonce = '0x'+hexNonce\n        // dont update our record on the nonce until the submit was successful\n        // update cache\n        self.nonceCache[address] = hexNonce\n        cb()\n      })\n      return\n\n   // Clear cache on a testrpc revert\n   case 'evm_revert':\n      self.nonceCache = {}\n      next()\n      return\n\n    default:\n      next()\n      return\n\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL25vbmNlLXRyYWNrZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGtEQUF3QjtBQUN6QyxvQkFBb0IsbUJBQU8sQ0FBQyxzRUFBZTtBQUMzQyxnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBaUI7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMsK0ZBQWtCO0FBQzlDLDJCQUEyQiw0SUFBcUQ7O0FBRWhGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlLWJyaWRnZS8uL25vZGVfbW9kdWxlcy93ZWIzLXByb3ZpZGVyLWVuZ2luZS9zdWJwcm92aWRlcnMvbm9uY2UtdHJhY2tlci5qcz8yNzk5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGluaGVyaXRzID0gcmVxdWlyZSgndXRpbCcpLmluaGVyaXRzXG5jb25zdCBUcmFuc2FjdGlvbiA9IHJlcXVpcmUoJ2V0aGVyZXVtanMtdHgnKVxuY29uc3QgZXRoVXRpbCA9IHJlcXVpcmUoJ2V0aGVyZXVtanMtdXRpbCcpXG5jb25zdCBTdWJwcm92aWRlciA9IHJlcXVpcmUoJy4vc3VicHJvdmlkZXIuanMnKVxuY29uc3QgYmxvY2tUYWdGb3JQYXlsb2FkID0gcmVxdWlyZSgnLi4vdXRpbC9ycGMtY2FjaGUtdXRpbHMnKS5ibG9ja1RhZ0ZvclBheWxvYWRcblxubW9kdWxlLmV4cG9ydHMgPSBOb25jZVRyYWNrZXJTdWJwcm92aWRlclxuXG4vLyBoYW5kbGVzIHRoZSBmb2xsb3dpbmcgUlBDIG1ldGhvZHM6XG4vLyAgIGV0aF9nZXRUcmFuc2FjdGlvbkNvdW50IChwZW5kaW5nIG9ubHkpXG4vL1xuLy8gb2JzZXJ2ZXMgdGhlIGZvbGxvd2luZyBSUEMgbWV0aG9kczpcbi8vICAgZXRoX3NlbmRSYXdUcmFuc2FjdGlvblxuLy8gICBldm1fcmV2ZXJ0ICh0byBjbGVhciB0aGUgbm9uY2UgY2FjaGUpXG5cbmluaGVyaXRzKE5vbmNlVHJhY2tlclN1YnByb3ZpZGVyLCBTdWJwcm92aWRlcilcblxuZnVuY3Rpb24gTm9uY2VUcmFja2VyU3VicHJvdmlkZXIob3B0cyl7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG5cbiAgc2VsZi5ub25jZUNhY2hlID0ge31cbn1cblxuTm9uY2VUcmFja2VyU3VicHJvdmlkZXIucHJvdG90eXBlLmhhbmRsZVJlcXVlc3QgPSBmdW5jdGlvbihwYXlsb2FkLCBuZXh0LCBlbmQpe1xuICBjb25zdCBzZWxmID0gdGhpc1xuXG4gIHN3aXRjaChwYXlsb2FkLm1ldGhvZCkge1xuXG4gICAgY2FzZSAnZXRoX2dldFRyYW5zYWN0aW9uQ291bnQnOlxuICAgICAgdmFyIGJsb2NrVGFnID0gYmxvY2tUYWdGb3JQYXlsb2FkKHBheWxvYWQpXG4gICAgICB2YXIgYWRkcmVzcyA9IHBheWxvYWQucGFyYW1zWzBdLnRvTG93ZXJDYXNlKClcbiAgICAgIHZhciBjYWNoZWRSZXN1bHQgPSBzZWxmLm5vbmNlQ2FjaGVbYWRkcmVzc11cbiAgICAgIC8vIG9ubHkgaGFuZGxlIHJlcXVlc3RzIGFnYWluc3QgdGhlICdwZW5kaW5nJyBibG9ja1RhZ1xuICAgICAgaWYgKGJsb2NrVGFnID09PSAncGVuZGluZycpIHtcbiAgICAgICAgLy8gaGFzIGEgcmVzdWx0XG4gICAgICAgIGlmIChjYWNoZWRSZXN1bHQpIHtcbiAgICAgICAgICBlbmQobnVsbCwgY2FjaGVkUmVzdWx0KVxuICAgICAgICAvLyBmYWxsdGhyb3VnaCB0aGVuIHBvcHVsYXRlIGNhY2hlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmV4dChmdW5jdGlvbihlcnIsIHJlc3VsdCwgY2Ipe1xuICAgICAgICAgICAgaWYgKGVycikgcmV0dXJuIGNiKClcbiAgICAgICAgICAgIGlmIChzZWxmLm5vbmNlQ2FjaGVbYWRkcmVzc10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBzZWxmLm5vbmNlQ2FjaGVbYWRkcmVzc10gPSByZXN1bHRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNiKClcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0KClcbiAgICAgIH1cbiAgICAgIHJldHVyblxuXG4gICAgY2FzZSAnZXRoX3NlbmRSYXdUcmFuc2FjdGlvbic6XG4gICAgICAvLyBhbGxvdyB0aGUgcmVxdWVzdCB0byBjb250aW51ZSBub3JtYWxseVxuICAgICAgbmV4dChmdW5jdGlvbihlcnIsIHJlc3VsdCwgY2Ipe1xuICAgICAgICAvLyBvbmx5IHVwZGF0ZSBsb2NhbCBub25jZSBpZiB0eCB3YXMgc3VibWl0dGVkIGNvcnJlY3RseVxuICAgICAgICBpZiAoZXJyKSByZXR1cm4gY2IoKVxuICAgICAgICAvLyBwYXJzZSByYXcgdHhcbiAgICAgICAgdmFyIHJhd1R4ID0gcGF5bG9hZC5wYXJhbXNbMF1cbiAgICAgICAgdmFyIHN0cmlwcGVkID0gZXRoVXRpbC5zdHJpcEhleFByZWZpeChyYXdUeClcbiAgICAgICAgdmFyIHJhd0RhdGEgPSBCdWZmZXIuZnJvbShldGhVdGlsLnN0cmlwSGV4UHJlZml4KHJhd1R4KSwgJ2hleCcpXG4gICAgICAgIHZhciB0eCA9IG5ldyBUcmFuc2FjdGlvbihCdWZmZXIuZnJvbShldGhVdGlsLnN0cmlwSGV4UHJlZml4KHJhd1R4KSwgJ2hleCcpKVxuICAgICAgICAvLyBleHRyYWN0IGFkZHJlc3NcbiAgICAgICAgdmFyIGFkZHJlc3MgPSAnMHgnK3R4LmdldFNlbmRlckFkZHJlc3MoKS50b1N0cmluZygnaGV4JykudG9Mb3dlckNhc2UoKVxuICAgICAgICAvLyBleHRyYWN0IG5vbmNlIGFuZCBpbmNyZW1lbnRcbiAgICAgICAgdmFyIG5vbmNlID0gZXRoVXRpbC5idWZmZXJUb0ludCh0eC5ub25jZSlcbiAgICAgICAgbm9uY2UrK1xuICAgICAgICAvLyBoZXhpZnkgYW5kIG5vcm1hbGl6ZVxuICAgICAgICB2YXIgaGV4Tm9uY2UgPSBub25jZS50b1N0cmluZygxNilcbiAgICAgICAgaWYgKGhleE5vbmNlLmxlbmd0aCUyKSBoZXhOb25jZSA9ICcwJytoZXhOb25jZVxuICAgICAgICBoZXhOb25jZSA9ICcweCcraGV4Tm9uY2VcbiAgICAgICAgLy8gZG9udCB1cGRhdGUgb3VyIHJlY29yZCBvbiB0aGUgbm9uY2UgdW50aWwgdGhlIHN1Ym1pdCB3YXMgc3VjY2Vzc2Z1bFxuICAgICAgICAvLyB1cGRhdGUgY2FjaGVcbiAgICAgICAgc2VsZi5ub25jZUNhY2hlW2FkZHJlc3NdID0gaGV4Tm9uY2VcbiAgICAgICAgY2IoKVxuICAgICAgfSlcbiAgICAgIHJldHVyblxuXG4gICAvLyBDbGVhciBjYWNoZSBvbiBhIHRlc3RycGMgcmV2ZXJ0XG4gICBjYXNlICdldm1fcmV2ZXJ0JzpcbiAgICAgIHNlbGYubm9uY2VDYWNoZSA9IHt9XG4gICAgICBuZXh0KClcbiAgICAgIHJldHVyblxuXG4gICAgZGVmYXVsdDpcbiAgICAgIG5leHQoKVxuICAgICAgcmV0dXJuXG5cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/subproviders/nonce-tracker.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/subproviders/subprovider.js":
/*!***********************************************************************!*\
  !*** ./node_modules/web3-provider-engine/subproviders/subprovider.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const createPayload = __webpack_require__(/*! ../util/create-payload.js */ \"(ssr)/./node_modules/web3-provider-engine/util/create-payload.js\")\n\nmodule.exports = SubProvider\n\n// this is the base class for a subprovider -- mostly helpers\n\n\nfunction SubProvider() {\n\n}\n\nSubProvider.prototype.setEngine = function(engine) {\n  const self = this\n  if (self.engine) return\n  self.engine = engine\n  engine.on('block', function(block) {\n    self.currentBlock = block\n  })\n\n  engine.on('start', function () {\n    self.start()\n  })\n\n  engine.on('stop', function () {\n    self.stop()\n  })\n}\n\nSubProvider.prototype.handleRequest = function(payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.')\n}\n\nSubProvider.prototype.emitPayload = function(payload, cb){\n  const self = this\n  self.engine.sendAsync(createPayload(payload), cb)\n}\n\n// dummies for overriding\n\nSubProvider.prototype.stop = function () {}\n\nSubProvider.prototype.start = function () {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL3N1YnByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQixtQkFBTyxDQUFDLG1HQUEyQjs7QUFFekQ7O0FBRUE7OztBQUdBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZS1icmlkZ2UvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL3N1YnByb3ZpZGVyLmpzPzgzMGYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3JlYXRlUGF5bG9hZCA9IHJlcXVpcmUoJy4uL3V0aWwvY3JlYXRlLXBheWxvYWQuanMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IFN1YlByb3ZpZGVyXG5cbi8vIHRoaXMgaXMgdGhlIGJhc2UgY2xhc3MgZm9yIGEgc3VicHJvdmlkZXIgLS0gbW9zdGx5IGhlbHBlcnNcblxuXG5mdW5jdGlvbiBTdWJQcm92aWRlcigpIHtcblxufVxuXG5TdWJQcm92aWRlci5wcm90b3R5cGUuc2V0RW5naW5lID0gZnVuY3Rpb24oZW5naW5lKSB7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG4gIGlmIChzZWxmLmVuZ2luZSkgcmV0dXJuXG4gIHNlbGYuZW5naW5lID0gZW5naW5lXG4gIGVuZ2luZS5vbignYmxvY2snLCBmdW5jdGlvbihibG9jaykge1xuICAgIHNlbGYuY3VycmVudEJsb2NrID0gYmxvY2tcbiAgfSlcblxuICBlbmdpbmUub24oJ3N0YXJ0JywgZnVuY3Rpb24gKCkge1xuICAgIHNlbGYuc3RhcnQoKVxuICB9KVxuXG4gIGVuZ2luZS5vbignc3RvcCcsIGZ1bmN0aW9uICgpIHtcbiAgICBzZWxmLnN0b3AoKVxuICB9KVxufVxuXG5TdWJQcm92aWRlci5wcm90b3R5cGUuaGFuZGxlUmVxdWVzdCA9IGZ1bmN0aW9uKHBheWxvYWQsIG5leHQsIGVuZCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ1N1YnByb3ZpZGVycyBzaG91bGQgb3ZlcnJpZGUgYGhhbmRsZVJlcXVlc3RgLicpXG59XG5cblN1YlByb3ZpZGVyLnByb3RvdHlwZS5lbWl0UGF5bG9hZCA9IGZ1bmN0aW9uKHBheWxvYWQsIGNiKXtcbiAgY29uc3Qgc2VsZiA9IHRoaXNcbiAgc2VsZi5lbmdpbmUuc2VuZEFzeW5jKGNyZWF0ZVBheWxvYWQocGF5bG9hZCksIGNiKVxufVxuXG4vLyBkdW1taWVzIGZvciBvdmVycmlkaW5nXG5cblN1YlByb3ZpZGVyLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24gKCkge31cblxuU3ViUHJvdmlkZXIucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkge31cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/subproviders/subprovider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/subproviders/subscriptions.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-provider-engine/subproviders/subscriptions.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ProviderSubprovider = __webpack_require__(/*! ./json-rpc-engine-middleware */ \"(ssr)/./node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js\")\nconst createSubscriptionManager = __webpack_require__(/*! eth-json-rpc-filters/subscriptionManager */ \"(ssr)/./node_modules/eth-json-rpc-filters/subscriptionManager.js\")\n\nclass SubscriptionsSubprovider extends ProviderSubprovider {\n  constructor() {\n    super(({ blockTracker, provider, engine }) => {\n      const { events, middleware } = createSubscriptionManager({ blockTracker, provider })\n      // forward subscription events on the engine\n      events.on('notification', (data) => engine.emit('data', null, data))\n      // return the subscription install/remove middleware\n      return middleware\n    })\n  }\n}\n\nmodule.exports = SubscriptionsSubprovider\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvc3VicHJvdmlkZXJzL3N1YnNjcmlwdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsNEJBQTRCLG1CQUFPLENBQUMsMEhBQThCO0FBQ2xFLGtDQUFrQyxtQkFBTyxDQUFDLGtIQUEwQzs7QUFFcEY7QUFDQTtBQUNBLGFBQWEsZ0NBQWdDO0FBQzdDLGNBQWMscUJBQXFCLDhCQUE4Qix3QkFBd0I7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlLWJyaWRnZS8uL25vZGVfbW9kdWxlcy93ZWIzLXByb3ZpZGVyLWVuZ2luZS9zdWJwcm92aWRlcnMvc3Vic2NyaXB0aW9ucy5qcz84NDM5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFByb3ZpZGVyU3VicHJvdmlkZXIgPSByZXF1aXJlKCcuL2pzb24tcnBjLWVuZ2luZS1taWRkbGV3YXJlJylcbmNvbnN0IGNyZWF0ZVN1YnNjcmlwdGlvbk1hbmFnZXIgPSByZXF1aXJlKCdldGgtanNvbi1ycGMtZmlsdGVycy9zdWJzY3JpcHRpb25NYW5hZ2VyJylcblxuY2xhc3MgU3Vic2NyaXB0aW9uc1N1YnByb3ZpZGVyIGV4dGVuZHMgUHJvdmlkZXJTdWJwcm92aWRlciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCh7IGJsb2NrVHJhY2tlciwgcHJvdmlkZXIsIGVuZ2luZSB9KSA9PiB7XG4gICAgICBjb25zdCB7IGV2ZW50cywgbWlkZGxld2FyZSB9ID0gY3JlYXRlU3Vic2NyaXB0aW9uTWFuYWdlcih7IGJsb2NrVHJhY2tlciwgcHJvdmlkZXIgfSlcbiAgICAgIC8vIGZvcndhcmQgc3Vic2NyaXB0aW9uIGV2ZW50cyBvbiB0aGUgZW5naW5lXG4gICAgICBldmVudHMub24oJ25vdGlmaWNhdGlvbicsIChkYXRhKSA9PiBlbmdpbmUuZW1pdCgnZGF0YScsIG51bGwsIGRhdGEpKVxuICAgICAgLy8gcmV0dXJuIHRoZSBzdWJzY3JpcHRpb24gaW5zdGFsbC9yZW1vdmUgbWlkZGxld2FyZVxuICAgICAgcmV0dXJuIG1pZGRsZXdhcmVcbiAgICB9KVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU3Vic2NyaXB0aW9uc1N1YnByb3ZpZGVyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/subproviders/subscriptions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/util/create-payload.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-provider-engine/util/create-payload.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const getRandomId = __webpack_require__(/*! ./random-id.js */ \"(ssr)/./node_modules/web3-provider-engine/util/random-id.js\")\nconst extend = __webpack_require__(/*! xtend */ \"(ssr)/./node_modules/xtend/immutable.js\")\n\nmodule.exports = createPayload\n\n\nfunction createPayload(data){\n  return extend({\n    // defaults\n    id: getRandomId(),\n    jsonrpc: '2.0',\n    params: [],\n    // user-specified\n  }, data)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvdXRpbC9jcmVhdGUtcGF5bG9hZC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsbUJBQU8sQ0FBQyxtRkFBZ0I7QUFDNUMsZUFBZSxtQkFBTyxDQUFDLHNEQUFPOztBQUU5Qjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZS1icmlkZ2UvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvdXRpbC9jcmVhdGUtcGF5bG9hZC5qcz9iNGQ0Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldFJhbmRvbUlkID0gcmVxdWlyZSgnLi9yYW5kb20taWQuanMnKVxuY29uc3QgZXh0ZW5kID0gcmVxdWlyZSgneHRlbmQnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZVBheWxvYWRcblxuXG5mdW5jdGlvbiBjcmVhdGVQYXlsb2FkKGRhdGEpe1xuICByZXR1cm4gZXh0ZW5kKHtcbiAgICAvLyBkZWZhdWx0c1xuICAgIGlkOiBnZXRSYW5kb21JZCgpLFxuICAgIGpzb25ycGM6ICcyLjAnLFxuICAgIHBhcmFtczogW10sXG4gICAgLy8gdXNlci1zcGVjaWZpZWRcbiAgfSwgZGF0YSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/util/create-payload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/util/estimate-gas.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-provider-engine/util/estimate-gas.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const createPayload = __webpack_require__(/*! ./create-payload.js */ \"(ssr)/./node_modules/web3-provider-engine/util/create-payload.js\")\n\nmodule.exports = estimateGas\n\n/*\n\nThis is a work around for https://github.com/ethereum/go-ethereum/issues/2577\n\n*/\n\n\nfunction estimateGas(provider, txParams, cb) {\n  provider.sendAsync(createPayload({\n    method: 'eth_estimateGas',\n    params: [txParams]\n  }), function(err, res){\n    if (err) {\n      // handle simple value transfer case\n      if (err.message === 'no contract code at given address') {\n        return cb(null, '0xcf08')\n      } else {\n        return cb(err)        \n      }\n    }\n    cb(null, res.result)\n  })\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvdXRpbC9lc3RpbWF0ZS1nYXMuanMiLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCLG1CQUFPLENBQUMsNkZBQXFCOztBQUVuRDs7QUFFQTs7QUFFQTs7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZS1icmlkZ2UvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvdXRpbC9lc3RpbWF0ZS1nYXMuanM/NTI1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjcmVhdGVQYXlsb2FkID0gcmVxdWlyZSgnLi9jcmVhdGUtcGF5bG9hZC5qcycpXG5cbm1vZHVsZS5leHBvcnRzID0gZXN0aW1hdGVHYXNcblxuLypcblxuVGhpcyBpcyBhIHdvcmsgYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZ28tZXRoZXJldW0vaXNzdWVzLzI1NzdcblxuKi9cblxuXG5mdW5jdGlvbiBlc3RpbWF0ZUdhcyhwcm92aWRlciwgdHhQYXJhbXMsIGNiKSB7XG4gIHByb3ZpZGVyLnNlbmRBc3luYyhjcmVhdGVQYXlsb2FkKHtcbiAgICBtZXRob2Q6ICdldGhfZXN0aW1hdGVHYXMnLFxuICAgIHBhcmFtczogW3R4UGFyYW1zXVxuICB9KSwgZnVuY3Rpb24oZXJyLCByZXMpe1xuICAgIGlmIChlcnIpIHtcbiAgICAgIC8vIGhhbmRsZSBzaW1wbGUgdmFsdWUgdHJhbnNmZXIgY2FzZVxuICAgICAgaWYgKGVyci5tZXNzYWdlID09PSAnbm8gY29udHJhY3QgY29kZSBhdCBnaXZlbiBhZGRyZXNzJykge1xuICAgICAgICByZXR1cm4gY2IobnVsbCwgJzB4Y2YwOCcpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY2IoZXJyKSAgICAgICAgXG4gICAgICB9XG4gICAgfVxuICAgIGNiKG51bGwsIHJlcy5yZXN1bHQpXG4gIH0pXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/util/estimate-gas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/util/random-id.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-provider-engine/util/random-id.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("module.exports = createRandomId\n\n\nfunction createRandomId () {\n  // random id\n  return Math.floor(Number.MAX_SAFE_INTEGER * Math.random())\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvdXRpbC9yYW5kb20taWQuanMiLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGUtYnJpZGdlLy4vbm9kZV9tb2R1bGVzL3dlYjMtcHJvdmlkZXItZW5naW5lL3V0aWwvcmFuZG9tLWlkLmpzPzQ0ZTMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVSYW5kb21JZFxuXG5cbmZ1bmN0aW9uIGNyZWF0ZVJhbmRvbUlkICgpIHtcbiAgLy8gcmFuZG9tIGlkXG4gIHJldHVybiBNYXRoLmZsb29yKE51bWJlci5NQVhfU0FGRV9JTlRFR0VSICogTWF0aC5yYW5kb20oKSlcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/util/random-id.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/util/rpc-cache-utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-provider-engine/util/rpc-cache-utils.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const stringify = __webpack_require__(/*! json-stable-stringify */ \"(ssr)/./node_modules/json-stable-stringify/index.js\")\n\nmodule.exports = {\n  cacheIdentifierForPayload: cacheIdentifierForPayload,\n  canCache: canCache,\n  blockTagForPayload: blockTagForPayload,\n  paramsWithoutBlockTag: paramsWithoutBlockTag,\n  blockTagParamIndex: blockTagParamIndex,\n  cacheTypeForPayload: cacheTypeForPayload,\n}\n\nfunction cacheIdentifierForPayload(payload, opts = {}){\n  if (!canCache(payload)) return null\n  const { includeBlockRef } = opts\n  const params = includeBlockRef ? payload.params : paramsWithoutBlockTag(payload)\n  return payload.method + ':' + stringify(params)\n}\n\nfunction canCache(payload){\n  return cacheTypeForPayload(payload) !== 'never'\n}\n\nfunction blockTagForPayload(payload){\n  var index = blockTagParamIndex(payload);\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return null;\n  }\n\n  return payload.params[index];\n}\n\nfunction paramsWithoutBlockTag(payload){\n  var index = blockTagParamIndex(payload);\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return payload.params;\n  }\n\n  // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n  if (payload.method === 'eth_getBlockByNumber') {\n    return payload.params.slice(1);\n  }\n\n  return payload.params.slice(0,index);\n}\n\nfunction blockTagParamIndex(payload){\n  switch(payload.method) {\n    // blockTag is third param\n    case 'eth_getStorageAt':\n      return 2\n    // blockTag is second param\n    case 'eth_getBalance':\n    case 'eth_getCode':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n      return 1\n    // blockTag is first param\n    case 'eth_getBlockByNumber':\n      return 0\n    // there is no blockTag\n    default:\n      return undefined\n  }\n}\n\nfunction cacheTypeForPayload(payload) {\n  switch (payload.method) {\n    // cache permanently\n    case 'web3_clientVersion':\n    case 'web3_sha3':\n    case 'eth_protocolVersion':\n    case 'eth_getBlockTransactionCountByHash':\n    case 'eth_getUncleCountByBlockHash':\n    case 'eth_getCode':\n    case 'eth_getBlockByHash':\n    case 'eth_getTransactionByHash':\n    case 'eth_getTransactionByBlockHashAndIndex':\n    case 'eth_getTransactionReceipt':\n    case 'eth_getUncleByBlockHashAndIndex':\n    case 'eth_getCompilers':\n    case 'eth_compileLLL':\n    case 'eth_compileSolidity':\n    case 'eth_compileSerpent':\n    case 'shh_version':\n      return 'perma'\n\n    // cache until fork\n    case 'eth_getBlockByNumber':\n    case 'eth_getBlockTransactionCountByNumber':\n    case 'eth_getUncleCountByBlockNumber':\n    case 'eth_getTransactionByBlockNumberAndIndex':\n    case 'eth_getUncleByBlockNumberAndIndex':\n      return 'fork'\n\n    // cache for block\n    case 'eth_gasPrice':\n    case 'eth_getBalance':\n    case 'eth_getStorageAt':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n    case 'eth_getFilterLogs':\n    case 'eth_getLogs':\n    case 'eth_blockNumber':\n      return 'block'\n\n    // never cache\n    case 'net_version':\n    case 'net_peerCount':\n    case 'net_listening':\n    case 'eth_syncing':\n    case 'eth_sign':\n    case 'eth_coinbase':\n    case 'eth_mining':\n    case 'eth_hashrate':\n    case 'eth_accounts':\n    case 'eth_sendTransaction':\n    case 'eth_sendRawTransaction':\n    case 'eth_newFilter':\n    case 'eth_newBlockFilter':\n    case 'eth_newPendingTransactionFilter':\n    case 'eth_uninstallFilter':\n    case 'eth_getFilterChanges':\n    case 'eth_getWork':\n    case 'eth_submitWork':\n    case 'eth_submitHashrate':\n    case 'db_putString':\n    case 'db_getString':\n    case 'db_putHex':\n    case 'db_getHex':\n    case 'shh_post':\n    case 'shh_newIdentity':\n    case 'shh_hasIdentity':\n    case 'shh_newGroup':\n    case 'shh_addToGroup':\n    case 'shh_newFilter':\n    case 'shh_uninstallFilter':\n    case 'shh_getFilterChanges':\n    case 'shh_getMessages':\n      return 'never'\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvdXRpbC9ycGMtY2FjaGUtdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsa0ZBQXVCOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFEQUFxRDtBQUNyRDtBQUNBLFVBQVUsa0JBQWtCO0FBQzVCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZS1icmlkZ2UvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvdXRpbC9ycGMtY2FjaGUtdXRpbHMuanM/OTY0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzdHJpbmdpZnkgPSByZXF1aXJlKCdqc29uLXN0YWJsZS1zdHJpbmdpZnknKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY2FjaGVJZGVudGlmaWVyRm9yUGF5bG9hZDogY2FjaGVJZGVudGlmaWVyRm9yUGF5bG9hZCxcbiAgY2FuQ2FjaGU6IGNhbkNhY2hlLFxuICBibG9ja1RhZ0ZvclBheWxvYWQ6IGJsb2NrVGFnRm9yUGF5bG9hZCxcbiAgcGFyYW1zV2l0aG91dEJsb2NrVGFnOiBwYXJhbXNXaXRob3V0QmxvY2tUYWcsXG4gIGJsb2NrVGFnUGFyYW1JbmRleDogYmxvY2tUYWdQYXJhbUluZGV4LFxuICBjYWNoZVR5cGVGb3JQYXlsb2FkOiBjYWNoZVR5cGVGb3JQYXlsb2FkLFxufVxuXG5mdW5jdGlvbiBjYWNoZUlkZW50aWZpZXJGb3JQYXlsb2FkKHBheWxvYWQsIG9wdHMgPSB7fSl7XG4gIGlmICghY2FuQ2FjaGUocGF5bG9hZCkpIHJldHVybiBudWxsXG4gIGNvbnN0IHsgaW5jbHVkZUJsb2NrUmVmIH0gPSBvcHRzXG4gIGNvbnN0IHBhcmFtcyA9IGluY2x1ZGVCbG9ja1JlZiA/IHBheWxvYWQucGFyYW1zIDogcGFyYW1zV2l0aG91dEJsb2NrVGFnKHBheWxvYWQpXG4gIHJldHVybiBwYXlsb2FkLm1ldGhvZCArICc6JyArIHN0cmluZ2lmeShwYXJhbXMpXG59XG5cbmZ1bmN0aW9uIGNhbkNhY2hlKHBheWxvYWQpe1xuICByZXR1cm4gY2FjaGVUeXBlRm9yUGF5bG9hZChwYXlsb2FkKSAhPT0gJ25ldmVyJ1xufVxuXG5mdW5jdGlvbiBibG9ja1RhZ0ZvclBheWxvYWQocGF5bG9hZCl7XG4gIHZhciBpbmRleCA9IGJsb2NrVGFnUGFyYW1JbmRleChwYXlsb2FkKTtcblxuICAvLyBCbG9jayB0YWcgcGFyYW0gbm90IHBhc3NlZC5cbiAgaWYgKGluZGV4ID49IHBheWxvYWQucGFyYW1zLmxlbmd0aCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHBheWxvYWQucGFyYW1zW2luZGV4XTtcbn1cblxuZnVuY3Rpb24gcGFyYW1zV2l0aG91dEJsb2NrVGFnKHBheWxvYWQpe1xuICB2YXIgaW5kZXggPSBibG9ja1RhZ1BhcmFtSW5kZXgocGF5bG9hZCk7XG5cbiAgLy8gQmxvY2sgdGFnIHBhcmFtIG5vdCBwYXNzZWQuXG4gIGlmIChpbmRleCA+PSBwYXlsb2FkLnBhcmFtcy5sZW5ndGgpIHtcbiAgICByZXR1cm4gcGF5bG9hZC5wYXJhbXM7XG4gIH1cblxuICAvLyBldGhfZ2V0QmxvY2tCeU51bWJlciBoYXMgdGhlIGJsb2NrIHRhZyBmaXJzdCwgdGhlbiB0aGUgb3B0aW9uYWwgaW5jbHVkZVR4PyBwYXJhbVxuICBpZiAocGF5bG9hZC5tZXRob2QgPT09ICdldGhfZ2V0QmxvY2tCeU51bWJlcicpIHtcbiAgICByZXR1cm4gcGF5bG9hZC5wYXJhbXMuc2xpY2UoMSk7XG4gIH1cblxuICByZXR1cm4gcGF5bG9hZC5wYXJhbXMuc2xpY2UoMCxpbmRleCk7XG59XG5cbmZ1bmN0aW9uIGJsb2NrVGFnUGFyYW1JbmRleChwYXlsb2FkKXtcbiAgc3dpdGNoKHBheWxvYWQubWV0aG9kKSB7XG4gICAgLy8gYmxvY2tUYWcgaXMgdGhpcmQgcGFyYW1cbiAgICBjYXNlICdldGhfZ2V0U3RvcmFnZUF0JzpcbiAgICAgIHJldHVybiAyXG4gICAgLy8gYmxvY2tUYWcgaXMgc2Vjb25kIHBhcmFtXG4gICAgY2FzZSAnZXRoX2dldEJhbGFuY2UnOlxuICAgIGNhc2UgJ2V0aF9nZXRDb2RlJzpcbiAgICBjYXNlICdldGhfZ2V0VHJhbnNhY3Rpb25Db3VudCc6XG4gICAgY2FzZSAnZXRoX2NhbGwnOlxuICAgIGNhc2UgJ2V0aF9lc3RpbWF0ZUdhcyc6XG4gICAgICByZXR1cm4gMVxuICAgIC8vIGJsb2NrVGFnIGlzIGZpcnN0IHBhcmFtXG4gICAgY2FzZSAnZXRoX2dldEJsb2NrQnlOdW1iZXInOlxuICAgICAgcmV0dXJuIDBcbiAgICAvLyB0aGVyZSBpcyBubyBibG9ja1RhZ1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbn1cblxuZnVuY3Rpb24gY2FjaGVUeXBlRm9yUGF5bG9hZChwYXlsb2FkKSB7XG4gIHN3aXRjaCAocGF5bG9hZC5tZXRob2QpIHtcbiAgICAvLyBjYWNoZSBwZXJtYW5lbnRseVxuICAgIGNhc2UgJ3dlYjNfY2xpZW50VmVyc2lvbic6XG4gICAgY2FzZSAnd2ViM19zaGEzJzpcbiAgICBjYXNlICdldGhfcHJvdG9jb2xWZXJzaW9uJzpcbiAgICBjYXNlICdldGhfZ2V0QmxvY2tUcmFuc2FjdGlvbkNvdW50QnlIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0VW5jbGVDb3VudEJ5QmxvY2tIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0Q29kZSc6XG4gICAgY2FzZSAnZXRoX2dldEJsb2NrQnlIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0VHJhbnNhY3Rpb25CeUhhc2gnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkJ5QmxvY2tIYXNoQW5kSW5kZXgnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvblJlY2VpcHQnOlxuICAgIGNhc2UgJ2V0aF9nZXRVbmNsZUJ5QmxvY2tIYXNoQW5kSW5kZXgnOlxuICAgIGNhc2UgJ2V0aF9nZXRDb21waWxlcnMnOlxuICAgIGNhc2UgJ2V0aF9jb21waWxlTExMJzpcbiAgICBjYXNlICdldGhfY29tcGlsZVNvbGlkaXR5JzpcbiAgICBjYXNlICdldGhfY29tcGlsZVNlcnBlbnQnOlxuICAgIGNhc2UgJ3NoaF92ZXJzaW9uJzpcbiAgICAgIHJldHVybiAncGVybWEnXG5cbiAgICAvLyBjYWNoZSB1bnRpbCBmb3JrXG4gICAgY2FzZSAnZXRoX2dldEJsb2NrQnlOdW1iZXInOlxuICAgIGNhc2UgJ2V0aF9nZXRCbG9ja1RyYW5zYWN0aW9uQ291bnRCeU51bWJlcic6XG4gICAgY2FzZSAnZXRoX2dldFVuY2xlQ291bnRCeUJsb2NrTnVtYmVyJzpcbiAgICBjYXNlICdldGhfZ2V0VHJhbnNhY3Rpb25CeUJsb2NrTnVtYmVyQW5kSW5kZXgnOlxuICAgIGNhc2UgJ2V0aF9nZXRVbmNsZUJ5QmxvY2tOdW1iZXJBbmRJbmRleCc6XG4gICAgICByZXR1cm4gJ2ZvcmsnXG5cbiAgICAvLyBjYWNoZSBmb3IgYmxvY2tcbiAgICBjYXNlICdldGhfZ2FzUHJpY2UnOlxuICAgIGNhc2UgJ2V0aF9nZXRCYWxhbmNlJzpcbiAgICBjYXNlICdldGhfZ2V0U3RvcmFnZUF0JzpcbiAgICBjYXNlICdldGhfZ2V0VHJhbnNhY3Rpb25Db3VudCc6XG4gICAgY2FzZSAnZXRoX2NhbGwnOlxuICAgIGNhc2UgJ2V0aF9lc3RpbWF0ZUdhcyc6XG4gICAgY2FzZSAnZXRoX2dldEZpbHRlckxvZ3MnOlxuICAgIGNhc2UgJ2V0aF9nZXRMb2dzJzpcbiAgICBjYXNlICdldGhfYmxvY2tOdW1iZXInOlxuICAgICAgcmV0dXJuICdibG9jaydcblxuICAgIC8vIG5ldmVyIGNhY2hlXG4gICAgY2FzZSAnbmV0X3ZlcnNpb24nOlxuICAgIGNhc2UgJ25ldF9wZWVyQ291bnQnOlxuICAgIGNhc2UgJ25ldF9saXN0ZW5pbmcnOlxuICAgIGNhc2UgJ2V0aF9zeW5jaW5nJzpcbiAgICBjYXNlICdldGhfc2lnbic6XG4gICAgY2FzZSAnZXRoX2NvaW5iYXNlJzpcbiAgICBjYXNlICdldGhfbWluaW5nJzpcbiAgICBjYXNlICdldGhfaGFzaHJhdGUnOlxuICAgIGNhc2UgJ2V0aF9hY2NvdW50cyc6XG4gICAgY2FzZSAnZXRoX3NlbmRUcmFuc2FjdGlvbic6XG4gICAgY2FzZSAnZXRoX3NlbmRSYXdUcmFuc2FjdGlvbic6XG4gICAgY2FzZSAnZXRoX25ld0ZpbHRlcic6XG4gICAgY2FzZSAnZXRoX25ld0Jsb2NrRmlsdGVyJzpcbiAgICBjYXNlICdldGhfbmV3UGVuZGluZ1RyYW5zYWN0aW9uRmlsdGVyJzpcbiAgICBjYXNlICdldGhfdW5pbnN0YWxsRmlsdGVyJzpcbiAgICBjYXNlICdldGhfZ2V0RmlsdGVyQ2hhbmdlcyc6XG4gICAgY2FzZSAnZXRoX2dldFdvcmsnOlxuICAgIGNhc2UgJ2V0aF9zdWJtaXRXb3JrJzpcbiAgICBjYXNlICdldGhfc3VibWl0SGFzaHJhdGUnOlxuICAgIGNhc2UgJ2RiX3B1dFN0cmluZyc6XG4gICAgY2FzZSAnZGJfZ2V0U3RyaW5nJzpcbiAgICBjYXNlICdkYl9wdXRIZXgnOlxuICAgIGNhc2UgJ2RiX2dldEhleCc6XG4gICAgY2FzZSAnc2hoX3Bvc3QnOlxuICAgIGNhc2UgJ3NoaF9uZXdJZGVudGl0eSc6XG4gICAgY2FzZSAnc2hoX2hhc0lkZW50aXR5JzpcbiAgICBjYXNlICdzaGhfbmV3R3JvdXAnOlxuICAgIGNhc2UgJ3NoaF9hZGRUb0dyb3VwJzpcbiAgICBjYXNlICdzaGhfbmV3RmlsdGVyJzpcbiAgICBjYXNlICdzaGhfdW5pbnN0YWxsRmlsdGVyJzpcbiAgICBjYXNlICdzaGhfZ2V0RmlsdGVyQ2hhbmdlcyc6XG4gICAgY2FzZSAnc2hoX2dldE1lc3NhZ2VzJzpcbiAgICAgIHJldHVybiAnbmV2ZXInXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/util/rpc-cache-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-provider-engine/util/stoplight.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-provider-engine/util/stoplight.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter)\nconst inherits = (__webpack_require__(/*! util */ \"util\").inherits)\n\nmodule.exports = Stoplight\n\n\ninherits(Stoplight, EventEmitter)\n\nfunction Stoplight(){\n  const self = this\n  EventEmitter.call(self)\n  self.isLocked = true\n}\n\nStoplight.prototype.go = function(){\n  const self = this\n  self.isLocked = false\n  self.emit('unlock')\n}\n\nStoplight.prototype.stop = function(){\n  const self = this\n  self.isLocked = true\n  self.emit('lock')\n}\n\nStoplight.prototype.await = function(fn){\n  const self = this\n  if (self.isLocked) {\n    self.once('unlock', fn)\n  } else {\n    setTimeout(fn)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1wcm92aWRlci1lbmdpbmUvdXRpbC9zdG9wbGlnaHQuanMiLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLDBEQUE4QjtBQUNuRCxpQkFBaUIsa0RBQXdCOztBQUV6Qzs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGUtYnJpZGdlLy4vbm9kZV9tb2R1bGVzL3dlYjMtcHJvdmlkZXItZW5naW5lL3V0aWwvc3RvcGxpZ2h0LmpzPzZlNGUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG5jb25zdCBpbmhlcml0cyA9IHJlcXVpcmUoJ3V0aWwnKS5pbmhlcml0c1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0b3BsaWdodFxuXG5cbmluaGVyaXRzKFN0b3BsaWdodCwgRXZlbnRFbWl0dGVyKVxuXG5mdW5jdGlvbiBTdG9wbGlnaHQoKXtcbiAgY29uc3Qgc2VsZiA9IHRoaXNcbiAgRXZlbnRFbWl0dGVyLmNhbGwoc2VsZilcbiAgc2VsZi5pc0xvY2tlZCA9IHRydWVcbn1cblxuU3RvcGxpZ2h0LnByb3RvdHlwZS5nbyA9IGZ1bmN0aW9uKCl7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG4gIHNlbGYuaXNMb2NrZWQgPSBmYWxzZVxuICBzZWxmLmVtaXQoJ3VubG9jaycpXG59XG5cblN0b3BsaWdodC5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uKCl7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG4gIHNlbGYuaXNMb2NrZWQgPSB0cnVlXG4gIHNlbGYuZW1pdCgnbG9jaycpXG59XG5cblN0b3BsaWdodC5wcm90b3R5cGUuYXdhaXQgPSBmdW5jdGlvbihmbil7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG4gIGlmIChzZWxmLmlzTG9ja2VkKSB7XG4gICAgc2VsZi5vbmNlKCd1bmxvY2snLCBmbilcbiAgfSBlbHNlIHtcbiAgICBzZXRUaW1lb3V0KGZuKVxuICB9XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-provider-engine/util/stoplight.js\n");

/***/ })

};
;